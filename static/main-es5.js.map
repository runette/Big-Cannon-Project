{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/bcp-data-card/bcp-data-card.component.ts","webpack:///src/app/bcp-data-card/bcp-data-card.component.html","webpack:///src/app/bcp-database/bcp-database.component.ts","webpack:///src/app/bcp-database/bcp-database.component.html","webpack:///src/app/bcp-filter-values.service.ts","webpack:///src/app/bcp-help/bcp-help.component.ts","webpack:///src/app/bcp-help/bcp-help.component.html","webpack:///src/app/bcp-home/bcp-home.component.ts","webpack:///src/app/bcp-home/bcp-home.component.html","webpack:///src/app/bcp-list2string.pipe.ts","webpack:///src/app/bcp-map-data.service.ts","webpack:///src/app/bcp-new-record/bcp-new-record.component.ts","webpack:///src/app/bcp-new-record/bcp-new-record.component.html","webpack:///src/app/bcp-record-detail/bcp-record-detail.component.ts","webpack:///src/app/bcp-record-detail/bcp-record-detail.component.html","webpack:///src/app/bcp-record-observer/bcp-record-observer.component.ts","webpack:///src/app/bcp-record-observer/bcp-record-observer.component.html","webpack:///src/app/bcp-record-reporter/bcp-record-reporter.component.ts","webpack:///src/app/bcp-record-reporter/bcp-record-reporter.component.html","webpack:///src/app/bcp-record-surveyor/bcp-record-surveyor.component.ts","webpack:///src/app/bcp-record-surveyor/bcp-record-surveyor.component.html","webpack:///src/app/bcp-user.service.ts","webpack:///src/app/googlemap-locate/google-locate-control.ts","webpack:///src/app/googlemap-locate/googlemap-locate.component.ts","webpack:///src/app/googlemap-locate/googlemap-locate.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","AppComponent","title","AppModule","BcpDataCardComponent","BcpDatabaseComponent","FILTER_TEXT","data","markerOptions","draggable","markerPositions","options","zoom","center","lat","lng","mapTypeId","google","maps","MapTypeId","ROADMAP","zoomControl","zoomControlOptions","position","ControlPosition","LEFT_BOTTOM","mapTypeControl","scaleControl","streetViewControl","rotateControl","fullscreenControl","locateOptions","pan","zoomTo","cluster","$event","map","my_map","_googleMap","cat","gunCategory","mat","material","qual","recordQuality","order","checked","ownRecords","loaded","setCluster","setOwn","setOrder","BcpFilterValuesService","MATERIAL","RECORD_QUALITIES","GUN_CATEGORIES","RECORD_STATUS","BcpHelpComponent","BcpHomeComponent","BcpList2stringPipe","value","join","BcpMapDataService","_material","_gunCategory","_recordQuality","_recordStatus","_order","_ownRecords","gunid","site","location","LatLng","category","images","original","s200","s32","description","name","date","Date","displayName","context","collection","collName","collRef","markings","markDetails","interpretations","interDetails","country","geocode","places","geolocation","formatted_address","user_id","status","measurements","length","scale","mouldingCode","muzzleCode","casCode","buttonCode","setFilter","filteredData","bbox","_boundingBox","BcpNewRecordComponent","BcpRecordDetailComponent","request","mapData","edit","currentScreen","a","queryParamMap","subscribe","pmap","index","findIndex","element","parseInt","get","gun","BcpRecordObserverComponent","DATA_VALUES","user","provide","useExisting","BcpRecordReporterComponent","cannon","nativeElement","onload","cannonSvg","contentDocument","updateSvg","model","update","Object","forEach","key","getElementById","firstElementChild","innerHTML","_gun","scaleToggle","BcpRecordSurveyorComponent","BcpUserService","login","BcpUser","standing","test_user","LocateControl","args","el","controls","BOTTOM_LEFT","push","marker","Circle","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","locationOptions","enableHighAccuracy","timeout","maximumAge","GooglemapLocateComponent","navigator","watch","watchPosition","my_position","latlng","coords","latitude","longitude","control","setMap","_map","setCenter","setRadius","accuracy","setZoom","console","log","message","clearWatch","div","addListener","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport {BcpHomeComponent} from './bcp-home/bcp-home.component';\nimport {BcpDatabaseComponent} from './bcp-database/bcp-database.component';\nimport {BcpNewRecordComponent} from './bcp-new-record/bcp-new-record.component';\nimport {BcpRecordDetailComponent} from './bcp-record-detail/bcp-record-detail.component';\nimport {BcpHelpComponent} from './bcp-help/bcp-help.component'\n\n\nconst routes: Routes = [\n{ path: '', component: BcpHomeComponent },\n{ path: 'database', component: BcpDatabaseComponent },\n{ path: 'new_record', component: BcpNewRecordComponent},\n{ path: 'database/entry', component: BcpRecordDetailComponent},\n{ path: 'recording', component: BcpHelpComponent}];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'bcp';\n}\n","<mat-sidenav-container fullscreen>\n  <mat-sidenav-content fxLayout=\"column\">\n    <mat-toolbar color=\"primary\">\n      <button mat-button routerLink=\"/\">\n        <div class=\"navbar-brand\">\n          <img class=\"img-responsive m0 p0\" height=\"50\" src=\"/img/ultima-ratio-logo.jpg\">\n        </div>\n      </button>\n      <div fxLayout=\"row\" fxHide fxShow.gt-xs>\n          <button mat-button routerLink=\"/database\">Database</button>\n          <button mat-button routerLink=\"/new_record\">New Record</button>\n      </div>\n      <span class=\"fill-remaining-space\"></span>\n      <button mat-button>\n        <mat-icon>account_circle</mat-icon>\n      </button> \n      <button mat-button [mat-menu-trigger-for]=\"menu\" fxShow fxHide.gt-xs>\n      <mat-icon>menu</mat-icon>\n      </button>\n    </mat-toolbar>\n    \n    <mat-menu x-position=\"before\" #menu>\n      <mat-action-list>\n        <button mat-list-item routerLink=\"/database\">Database</button>\n        <button mat-list-item routerLink=\"/new_record\">New Record</button>\n      </mat-action-list>\n    </mat-menu>\n\n    <router-outlet></router-outlet>\n  </mat-sidenav-content>\n</mat-sidenav-container>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {FlexLayoutModule} from \"@angular/flex-layout\";\nimport {GoogleMapsModule} from '@angular/google-maps';\n\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {LayoutModule} from '@angular/cdk/layout';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatListModule} from '@angular/material/list';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatChipsModule} from '@angular/material/chips';\n\n\nimport { BcpHomeComponent } from './bcp-home/bcp-home.component';\nimport { BcpDatabaseComponent } from './bcp-database/bcp-database.component';\nimport { BcpNewRecordComponent } from './bcp-new-record/bcp-new-record.component';\nimport { GooglemapLocateComponent } from './googlemap-locate/googlemap-locate.component';\nimport { BcpDataCardComponent } from './bcp-data-card/bcp-data-card.component';\nimport { BcpRecordDetailComponent } from './bcp-record-detail/bcp-record-detail.component';\nimport {BcpRecordObserverComponent} from './bcp-record-observer/bcp-record-observer.component';\nimport { BcpRecordReporterComponent } from './bcp-record-reporter/bcp-record-reporter.component';\nimport { BcpRecordSurveyorComponent } from './bcp-record-surveyor/bcp-record-surveyor.component';\nimport { BcpList2stringPipe } from './bcp-list2string.pipe';\nimport { BcpHelpComponent } from './bcp-help/bcp-help.component'\n \n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BcpHomeComponent,\n    BcpDatabaseComponent,\n    BcpNewRecordComponent,\n    GooglemapLocateComponent,\n    BcpDataCardComponent,\n    BcpRecordDetailComponent,\n    BcpRecordObserverComponent,\n    BcpRecordReporterComponent,\n    BcpRecordSurveyorComponent,\n    BcpList2stringPipe,\n    BcpHelpComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    LayoutModule,\n    FlexLayoutModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatIconModule,\n    GoogleMapsModule,\n    MatExpansionModule,\n    MatListModule,\n    MatSlideToggleModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatSelectModule,\n    MatFormFieldModule,\n    MatButtonToggleModule,\n    MatSidenavModule,\n    MatInputModule,\n    MatChipsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { DataItem } from '../bcp-map-data.service';\n\n@Component({\n  selector: 'app-bcp-data-card',\n  templateUrl: './bcp-data-card.component.html',\n  styleUrls: ['./bcp-data-card.component.css']\n})\nexport class BcpDataCardComponent implements OnInit {\n  @Input()\n  record: DataItem\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<div class=\"info\" >\n    <div class=\"card\">\n        <div class=\"row no-gutters\"><div class=\"col-2\">\n            <img class=\"card-img m-1\" src=\"{{record.images[0].s32}}\"  width=\"32px\"/>\n        </div>\n        <div class=\"col-10\">\n            <div class=\"card-body\">\n                <div class=\"h6 card-title text-truncate\">\n                    {{record.displayName}}\n                </div>\n                <div class=\"card-text\">\n                    <p>\n                        <small class=\"text-mute\" *ngIf=\"record.category && record.category != 'Not Known'\">{{record.category}}, </small>\n                        <small class=\"text-mute\" *ngIf=\"record.material && record.material != 'Not Known'\">{{record.material}}</small>\n                    </p>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","///<reference types='googlemaps' />\n///<reference path='../googlemap-locate/google-locate-control.ts' />\nimport { Component, ViewChild} from '@angular/core';\nimport {GoogleMap} from '@angular/google-maps';\nimport { BcpFilterValuesService, Material, GunCategory, RecordStatus, RecordQuality, Order } from '../bcp-filter-values.service';\nimport { BcpMapDataService } from '../bcp-map-data.service';\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\n\n@Component({\n  selector: 'app-bcp-database',\n  templateUrl: './bcp-database.component.html',\n  styleUrls: ['./bcp-database.component.scss']\n})\nexport class BcpDatabaseComponent {\n  markerOptions = {draggable: false};\n  markerPositions: google.maps.LatLngLiteral[] = [];\n  options: google.maps.MapOptions = {\n    zoom: 7,\n    center: {lat: 24, lng: 12},\n    mapTypeId: google.maps.MapTypeId.ROADMAP,\n    zoomControl: true,\n    zoomControlOptions:{\n        position: google.maps.ControlPosition.LEFT_BOTTOM},\n    mapTypeControl: false,\n    scaleControl: true,\n    streetViewControl: false,\n    rotateControl: true,\n    fullscreenControl: false,\n  } \n  locateOptions: google.maps.LocateControlOptions= {\n    position: google.maps.ControlPosition.LEFT_BOTTOM,\n    pan: true,\n    zoom: true,\n    zoomTo: 17\n  }\n  map: google.maps.Map;\n  @ViewChild(GoogleMap, {static: false}) my_map: GoogleMap;\n\n  cluster: boolean= false;\n\n  constructor(public FILTER_TEXT: BcpFilterValuesService, public data: BcpMapDataService) { }\n\n\n  loaded($event) {\n    if (!this.map) {\n      this.map = this.my_map._googleMap;\n    }\n  }\n\n  setCategory (cat: GunCategory) {\n    this.data.gunCategory = cat;\n  }\n\n  setMaterial (mat: Material) {\n    this.data.material = mat;\n  }\n\n  setQuality (qual: RecordQuality) {\n    this.data.recordQuality = qual;\n  }\n\n  setOrder (order: Order) {\n    this.data.order = order;\n  }\n\n  setCluster ($event: MatSlideToggleChange) {\n    this.cluster = $event.checked;\n  }\n\n  setOwn ($event: MatSlideToggleChange) {\n    this.data.ownRecords = $event.checked;\n  }\n\n}\n","<div class=\"map-container fill-remaining-space\">\n<google-map height=\"100%\"\n            width=\"100%\"\n            [options]=\"options\"\n            (tilesloaded)=\"loaded($event)\"\n></google-map>\n<div class=\"bounding-box\"></div>\n</div>\n<app-googlemap-locate\n            [options]=\"locateOptions\"\n            [(map)]=\"map\"\n></app-googlemap-locate>\n<button mat-fab routerLink=\"/new_record\" color=\"primary\" ngClass='fab'>\n    <mat-icon color='accent' ngClass='fab-text'>\n        add\n    </mat-icon>\n</button>\n\n<mat-toolbar class=\"map-nav-wide bg-ur\" fxLayout=\"row\" fxHide fxShow.gt-sm>\n    <button mat-button [matMenuTriggerFor]=\"typeMenu\">Type <small class=\"text-muted\" *ngIf=\" data.gunCategory != 'All'\">{{data.gunCategory}}</small> </button>\n    <button mat-button [matMenuTriggerFor]=\"materialMenu\">Material <small class=\"text-muted\" *ngIf=\" data.material != 'All'\">{{data.material}}</small></button>\n    <button mat-button [matMenuTriggerFor]=\"statusMenu\">Status <small class=\"text-muted\" *ngIf=\" data.recordQuality != 'All'\">{{data.recordQuality}}</small></button>\n    <button mat-button [matMenuTriggerFor]=\"orderMenu\">Order <small class=\"text-muted\" *ngIf=\" data.order != 'Order'\">{{data.order}}</small></button>\n    <mat-slide-toggle\n          class=\"\"\n          [color]=\"'accent'\"\n          [checked]=\"cluster\"\n          (change)=\"setCluster($event)\">\n        Ungrouped\n      </mat-slide-toggle>\n      <mat-slide-toggle\n          class=\"\"\n          [color]=\"'accent'\"\n          [checked]=\"data.ownRecords\"\n          (change)=\"setOwn($event)\">\n        All\n      </mat-slide-toggle>\n</mat-toolbar>\n\n<mat-expansion-panel class=\"map-nav bg-ur\" fxLayout=\"row\" fxShow fxHide.gt-sm>\n    <mat-expansion-panel-header>\n        <mat-panel-title>\n        </mat-panel-title>\n        <mat-panel-description>\n        </mat-panel-description>\n    </mat-expansion-panel-header>\n    <mat-action-list>\n        <button mat-list-item [matMenuTriggerFor]=\"typeMenu\">Type<small class=\"text-muted\" *ngIf=\" data.gunCategory != 'All'\"> {{data.gunCategory}}</small> </button>\n        <button mat-list-item [matMenuTriggerFor]=\"materialMenu\">Material<small class=\"text-muted\" *ngIf=\" data.material != 'All'\"> {{data.material}}</small></button>\n        <button mat-list-item [matMenuTriggerFor]=\"statusMenu\">Status<small class=\"text-muted\" *ngIf=\" data.recordQuality != 'All'\"> {{data.recordQuality}}</small></button>\n        <button mat-list-item [matMenuTriggerFor]=\"orderMenu\">Order <small class=\"text-muted\" *ngIf=\" data.order != 'Order'\">{{data.order}}</small></button>\n    <mat-slide-toggle mat-list-item\n          class=\"\"\n          [color]=\"'accent'\"\n          [checked]=\"cluster\"\n          (change)=\"setCluster($event)\">\n        Ungrouped\n      </mat-slide-toggle>\n      <mat-slide-toggle mat-list-item\n          class=\"\"\n          [color]=\"'accent'\"\n          [checked]=\"data.ownRecords\"\n          (change)=\"setOwn($event)\">\n        All\n      </mat-slide-toggle>\n    </mat-action-list>\n</mat-expansion-panel>\n\n<div class=\"float-table-wide bg-ur\" id=\"table-entries\" fxLayout=\"row\" fxHide fxShow.gt-sm>\n    <div class=\"w-100 p-1\" *ngFor=\"let record of data.filteredData\">\n        <app-bcp-data-card [routerLink]=\"['entry']\" [queryParams]=\"{gunid:record.gunid}\"\n            [record]=\"record\" \n        ></app-bcp-data-card>\n    </div>\n</div>\n\n<div class=\"float-table bg-ur\" id=\"table-entries\" fxLayout=\"row\" fxShow fxHide.gt-sm>\n</div>\n\n<mat-menu #typeMenu=\"matMenu\">\n    <div *ngFor=\"let item of FILTER_TEXT.GUN_CATEGORIES\">\n        <button mat-menu-item (click)=\"setCategory(item)\">{{item}}</button>\n    </div>\n</mat-menu>\n\n<mat-menu #materialMenu=\"matMenu\">\n    <div *ngFor=\"let item of FILTER_TEXT.MATERIAL\">\n        <button mat-menu-item (click)=\"setMaterial(item)\">{{item}}</button>\n    </div>\n</mat-menu>\n\n<mat-menu #statusMenu=\"matMenu\">\n    <div *ngFor=\"let item of FILTER_TEXT.RECORD_QUALITIES\">\n        <button mat-menu-item (click)=\"setQuality(item)\">{{item}}</button>\n    </div>\n</mat-menu>\n\n<mat-menu #orderMenu=\"matMenu\">\n    <button mat-menu-item (click)=\"setOrder('Order')\">Order</button>\n    <button mat-menu-item (click)=\"setOrder('Date Ascending')\">Date Ascending</button>\n    <button mat-menu-item (click)=\"setOrder('Date Descending')\">Date Descending</button>\n</mat-menu>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BcpFilterValuesService {\n\n  MATERIAL: string[] = [\"All\", \"Not Known\", \"Cast Iron\", \"Wrought Iron\", \"Bronze\", \"Combined Cast and Wrought Iron\"];\n  RECORD_QUALITIES: string[] =  [\"All\", 'Observer', \"Recorder\", \"Surveyor\"];\n  GUN_CATEGORIES: string[] = [ \"All\", \"Not Known\",\"Muzzle Loading\", \"Breech Loading\", \"Carronade\"];  \n  RECORD_STATUS: string[] = [\"All\", 'Unverified', 'Auto' , 'Verified']\n\n\n  constructor() { }\n}\n\nexport type Material =  \"All\" | \"Not Known\" | \"Cast Iron\" | \"Wrought Iron\" | \"Bronze\" | \"Combined Cast and Wrought Iron\";\nexport type RecordQuality =  'All' | 'Observer'| \"Recorder\" | \"Surveyor\";\nexport type GunCategory =  \"All\" | \"Not Known\" | \"Muzzle Loading\" | \"Breech Loading\" | \"Carronade\";  \nexport type RecordStatus = \"All\"| 'Unverified' | 'Auto' | 'Verified';\nexport type Order = \"Order\" | \"Date Ascending\" | \"Date Descending\" ;\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-bcp-help',\n  templateUrl: './bcp-help.component.html',\n  styleUrls: ['./bcp-help.component.css']\n})\nexport class BcpHelpComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container my-5\">\n    <div class=\"jumbotron p-3 p-md-5 text-white rounded bg-dark\">\n    <div class=\"col-md-9 px-0\">\n        <h1 class=\"display-4 font-italic\">Recording a Cannon</h1>\n        <p class=\"lead my-3\">Our recording system allows you to record as little or as much data as you like. The database has been set up to allow people to record information directly on site using a mobile device (tablet or smart phone) or from information they already have stored on their computer.\n    </p><p class=\"lead my-3\">\n        Recording is split into three levels depending on the level of detail: Observer, Recorder and Surveyor.\n    </p><p class=\"lead my-3\">\n        The observer level record only needs to a picture and a location. This is the basic information needed to create a record.\n    </p><p class=\"lead my-3\">\n        At the recorder level, you can add basic measurements about the gun\n    </p><p class=\"lead my-3\">\n        The surveyor level asks you to look at the cannon in more detail and record patterns and shapes.\n    </p><p class=\"lead my-3\">\n        Once you have created a record you can come back to it and either add or modify the information.\n    </p><p class=\"lead my-3\">\n        Our world map of guns allows you to see where guns are, and how much information about each one has been documented You can view basic information about a record without logging into the site but to see full the full information you need to register and log in  \n\n        </p>\n        <a class=\"btn btn-small btn-primary\" role=\"button\" href=\"http://www.3hconsulting.com/techniques/TechRecordingCannon.html\"> Learn More about Recording Guns</a>\n    </div>\n    </div>\n\n    <hr class=\"featurette-divider\">\n    <div class=\"row featurette\">\n        <div class=\"col-md-7\">\n            <img class=\"featurette-image img-fluid mx-auto\" src=\"/img/Slide1.JPG\" alt=\"Generic placeholder image\">\n            <img class=\"featurette-image img-fluid mx-auto\" src=\"/img/Slide2.JPG\" alt=\"Generic placeholder image\">\n            <img class=\"featurette-image img-fluid mx-auto\" src=\"/img/Slide3.JPG\" alt=\"Generic placeholder image\">\n        </div>\n        <div class=\"col-md-5\">\n        <h2 class=\"featurette-heading\"><span class=\"text-muted\">Login in</span></h2>\n        <p class=\"lead\">To create new records, you must be logged into the site.</p>\n        </div>\n        \n    </div>\n\n    <hr class=\"featurette-divider\">\n\n            <div class=\"row featurette\">\n            <div class=\"col-md-5\">\n                <h2 class=\"featurette-heading\"><span class=\"text-muted\">Check the Database</span></h2>\n                <p class=\"lead\">The First step is to check the database to see what is in the database already. Look on the map at the current location and see if the cannon is already in the database. You can use the ‘target’ button the map screen to use your phone to zoom into your current location. If the record already exists - you can add photos but cannot change any details at the moment. That ability should be coming soon, when we have worked out how to keep track of changes.</p>\n            </div>\n            <div class=\"col-md-7\">\n                <img class=\"featurette-image img-fluid mx-auto\" src=\"/img/Slide0.JPG\" alt=\"Generic placeholder image\">\n            </div>\n            </div>\n\n    <hr class=\"featurette-divider\">\n\n            <div class=\"row featurette\">\n            <div class=\"col-md-7\">\n                <img class=\"featurette-image img-fluid mx-auto\" src=\"/img/Slide4.JPG\" alt=\"Generic placeholder image\">\n                <img class=\"featurette-image img-fluid mx-auto\" src=\"/img/Slide5.JPG\" alt=\"Generic placeholder image\">\n            </div>\n            <div class=\"col-md-5\">\n                <h2 class=\"featurette-heading\"><span class=\"text-muted\">Entering a location (observer)\n                </span></h2>\n                <p class=\"lead\">When you enter a new record, you will be taken to the location page. You can either enter the location manually or by moving the cannon icon to your cannon’s location.\n                </p> <p class=\"lead\">If you are at the site of the cannon and are connected to the internet and have a GPS enabled device, you can use your current location to record where the cannon is.\n                </p> <p class=\"lead\">Once you have recorded and accepted the cannon location you will be asked to provide the correct site name. We use a standard set of location IDs provided by Google Maps to mark the nearest landmark. Scroll up and down the list to pick the most appropriate (Use the town as a default if you are not sure of the exact location description).\n                </p> <p class=\"lead\">If you made a mistake and chose the wrong location, don’t worry. You get a chance to fix that at the end of the process.\n                </p>\n            </div>\n            </div>\n            \n    <hr class=\"featurette-divider\">\n    <div class=\"row featurette\">\n        <div class=\"col-md-5\">\n        <h2 class=\"featurette-heading\"><span class=\"text-muted\">Entering an image (observer)</span></h2>\n        <p class=\"lead\">Once you have accepted the location you will be taken to the “ Add photo of the gun” screen.\n        </p><p class=\"lead\">Click “Browse” and this will take you to where you can access images of your gun on your computer. If you are using a smartphone and are out in the field you also have the option of using your camera to take “live” photos.\n        </p><p class=\"lead\">Once you have selected your image press “upload”. \n        </p><p class=\"lead\">We suggest your first photo is of the whole gun\n            </p>\n        </div>\n        <div class=\"col-md-7\">\n            <img class=\"featurette-image img-fluid mx-auto\" src=\"/img/Slide6.JPG\" alt=\"Generic placeholder image\">\n        </div>\n    </div>\n    \n    <hr class=\"featurette-divider\">\n    <div class=\"row featurette\">\n        <div class=\"col-md-5\">\n            <img class=\"featurette-image img-fluid mx-auto\" src=\"/img/Slide7.JPG\" alt=\"Generic placeholder image\">\n        </div>\n        <div class=\"col-md-7\">\n        <h2 class=\"featurette-heading\"><span class=\"text-muted\">Recording basic information (observer)</span></h2>\n        <p class=\"lead\">\n            The Observer screen allows you to enter basic information about the gun and to upload more photos . We suggest uploading photos in ones and twos at the moment. \n        </p>\n            <strong>Basic information</strong>\n            <dl class=\"row\">\n                <dt class=\"col-4\"><strong>Type of gun</strong></dt>\n                <dd class=\"col-8\">use the drop-down menu to choose the type of gun</dd>\n                <dt class=\"col-4\"><strong>Material </strong></dt>\n                <dd class=\"col-8\">use the drop-down menu to identify the material the gun is made from. </dd>\n                <dt class=\"col-4\"><strong>Short description </strong></dt>\n                <dd class=\"col-8\">add a short description of the gun, highlighting important features and any information known (calibre etc). If you are not adding the photographs “live” add the date photograph was taken. </dd>    \n                <dt class=\"col-4\"><strong>Author </strong></dt>\n                <dd class=\"col-8\">pre-populated ( if anon comes up overwrite with recorder name)</dd>\n                <dt class=\"col-4\"><strong>Date recorded </strong></dt>\n                <dd class=\"col-8\">pre-populated</dd>\n                <dt class=\"col-4\"><strong>Markings and information board </strong></dt>\n                <dd class=\"col-8\">highlight radio buttons if you can add information. Use the pop-up boxes to add information.</dd>\n            </dl>\n            \n            \n            <strong>Context</strong>\n            <dl class=\"row\">\n                <dt class=\"col-4\"><strong>Name</strong></dt>\n                <dd class=\"col-8\">defaults to Google location but you can overwrite it to give more detailed information about the gun location.</dd>\n                <dt class=\"col-4\"><strong>Location</strong></dt>\n                <dd class=\"col-8\">set to the Goggle location. Scroll up or down to modify.</dd>\n                <dt class=\"col-4\"><strong>Description of the cannon location</strong></dt>\n                <dd class=\"col-8\">add a short description of the specific location.</dd>\n                <dt class=\"col-4\"><strong>is this gun part of a museum….</strong></dt>\n                <dd class=\"col-8\">use the radio button to highlight and then add information about the collection. Add the collection reference if known.</dd>\n            </dl>\n        \n            <strong>Photos</strong> \n\n            Use the browse button to add more photographs of the cannon\n            \n        </div>\n    </div>\n    \n    <hr class=\"featurette-divider\">\n    <div class=\"row featurette\">\n        <div class=\"col-md-5\">\n        <h2 class=\"featurette-heading\"><span class=\"text-muted\">Recording Measurements (recorder)</span></h2>\n        <p class=\"lead\">\n            The recorder tab allows you to enter physical measurements about the gun. \n        </p><p class=\"lead\">Use the radio button to decide on measurement units ( m / mm ). \n        </p><p class=\"lead\"> The drawing currently shows a “standard” cannon but as the project develops we hope to add recording sheets based around carronades & mortars.\n        </p><p class=\"lead\">In the meantime, please add whatever measurements you can for the gun you are recording.\n        </p><p class=\"lead\">After entering data press the save icon before moving on.\n        </p>\n        </div>\n        <div class=\"col-md-7\">\n        <img class=\"featurette-image img-fluid mx-auto\" src=\"/img/Slide8.JPG\" alt=\"Generic placeholder image\">\n        </div>\n    </div>\n    \n    <hr class=\"featurette-divider\">\n    <div class=\"row featurette\">\n        <div class=\"col-md-7\">\n            <img class=\"featurette-image img-fluid mx-auto\" src=\"/img/Slide9.JPG\" alt=\"Generic placeholder image\">\n        </div>\n        <div class=\"col-md-5\">\n        <h2 class=\"featurette-heading\"><span class=\"text-muted\">Analysing patterns and shapes  (surveyor)</span></h2>\n        <p class=\"lead\">\n            The surveyor tab allows you to input  more detailed information about the cannon.\n            It has four sections.\n        </p>\n        <dl class=\"row\">\n            <dt class=\"col-4\"><strong>Moulding codes</strong></dt>\n            <dd class=\"col-8\">details about the moulding patterns on the reinforcing rings</dd>\n            <dt class=\"col-4\"><strong>Muzzle code</strong></dt>\n            <dd class=\"col-8\">generic shape of the muzzle</dd>\n            <dt class=\"col-4\"><strong>Cascable code</strong></dt>\n            <dd class=\"col-8\">generic shape of the cascable</dd>\n            <dt class=\"col-4\"><strong>Button code </strong></dt>\n            <dd class=\"col-8\">generic shape of the button</dd>\n        </dl>\n\n            <p class=\"lead\">Clicking on a box expands it and shows you drawings to help you complete the code\n            </p><p class=\"lead\">After entering data press the save icon before moving on.\n            \n        </p>\n        </div>\n\n    </div>\n    \n    <hr class=\"featurette-divider\">\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-bcp-home',\n  templateUrl: './bcp-home.component.html',\n  styleUrls: ['./bcp-home.component.scss']\n})\nexport class BcpHomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<div class=\"jumbotron jumbotron-fluid text-center paral para01\" >\n    <div class=\"container\">\n        <h1><span class=\"display-4 text-white bg-site-dark p-3\">Big Cannon Project</span></h1>\n        <div class=\"d-flex justify-content-center pt-3\">\n            <div class=\"\">\n                <a href=\"#about\" class=\"btn btn-primary align-middle\">Learn more</a>\n            </div>\n        </div>\n    </div>\n</div>\n<div class=\"jumbotron jumbotron-fluid text-center bg-white\">\n     <div class=\"container\">\n        <h3 >Gun Database</h3>\n        <p class=\"bold\">The database allows individual recorders to upload their gun records, to improve them over time and to view all the other guns that have been recorded around the world. The project database is linked to a world map so that gun records can be viewed in geographical context.</p>\n        <a href=\"/database\" class=\"btn btn-primary align-middle\">Explore the Guns</a>\n\n      </div>\n</div>\n\n<div class=\"jumbotron jumbotron-fluid text-center paral para02\">\n     <div class=\"container\">\n                <h3 class=\"text-white\" style=\"text-shadow: #444 0 1px 1px;\">Recording</h3>\n                <span class=\"img-back bg-dark d-block\"><p class=\"img-text bold\" style=\"text-shadow: #444 0 1px 1px;\">Our recording system allows you to record as little or as much data as you like. For Bronze level records, Observers only need to upload a picture and a location. Recorders can create Silver level records by identifying key physical features of the gun. At the Surveyor level, you can provide full dimensions to achieve Gold and be a Surveyor.\n                  Our world map of guns allows you to see where guns are and how much information about each one has been documented.</p></span>\n                <button class=\"btn btn-small btn-primary\" role=\"button\" routerLink=\"recording\"> How to Record Guns</button>\n        </div>\n</div>\n\n\n<div class=\"jumbotron jumbotron-fluid text-center bg-white\" id=\"about\">\n     <div class=\"container\">\n        <div id=\"picture-carousel\" class=\"container pictures d-none d-md-flex\">\n        </div>\n        <h1>About the Project</h1>\n        <p>\n            The Ultima Ratio Project aims to develop a centralised database of historical muzzle-loading artillery guns.\n        </p><p>\n            Launched in June 2018, the Project seeks to engage with scholars, curators, arms specialists, historical preservation organisations, individual researchers, and other key stakeholders in recording the history of important muzzle-loading ‘big guns’, and making such data publicly available.\n        </p><p>\n            In addition to the ongoing database development, the Project produces short articles highlighting interesting or noteworthy historical  guns.\n        </p><p>\n            The name of the project is derived from the Latin phrase ‘Ultima Ratio Regum’, often translated as ‘the final argument of kings’. This phrase adorned some French cannon, initially by order of Louis XIV (1638–1715), but has come to be synonymous with artillery more generally.\n        </p><p>\n            The Ultima Ratio Project is administered by Armament Research Services (ARES), a specialist intelligence consultancy. ARES also provides financial assistance to the Project.\n        </p>\n    </div><!-- end box -->\n</div>\n\n<div class=\"d-flex flex-row justify-content-around pt-3\">\n    <a href=\"/privacy\" class=\"iubenda-white iubenda-embed\" title=\"Privacy Policy \">Privacy Policy</a><script type=\"text/javascript\">(function (w,d) {var loader = function () {var s = d.createElement(\"script\"), tag = d.getElementsByTagName(\"script\")[0]; s.src=\"https://cdn.iubenda.com/iubenda.js\"; tag.parentNode.insertBefore(s,tag);}; if(w.addEventListener){w.addEventListener(\"load\", loader, false);}else if(w.attachEvent){w.attachEvent(\"onload\", loader);}else{w.onload = loader;}})(window, document);</script>\n    <a class=\"btn btn-sm btn-light\" role=\"button \" href=\"/tor\">Terms and Conditions of Access </a>\n</div>\n\n<div class=\"row pt-3\">\n    <div class=\"col-sm\">\n        <a href=\"http://armamentresearch.com/\" target=\"_blank\"><img class=\"rounded mx-auto d-block\" src=\"/img/Ares_Logo-3.png\" height=\"50px\"> </a>\n    </div><div class=\"col-sm\">\n        <a class=\"thin\" href=\"https://www.nauticalarchaeologysociety.org/\" target=\"_blank\"><img class=\"rounded mx-auto d-block\" src=\"/img/NAS-Square-Logo-Dark-Blue.png\" height=\"70px\" alt=\"\" /></a>\n    </div><div class=\"col-sm\">\n        <a class=\"thin\" href=\"http://www.basiliscoe.com/\" target=\"_blank\"><img class=\"rounded mx-auto d-block\" src=\"/img/basiliscoe.png\" height=\"70px\" alt=\"\" /></a>\n    </div>\n\n    <div class=\"col-sm\">\n        <a class=\"thin\" href=\"http://www.cismas.org.uk/\" target=\"_blank\"><img class=\"rounded mx-auto d-block\" src=\"/img/cismas.png\" height=\"50px\" alt=\"\" /></a>\n    </div>\n    <div class=\"col-sm\">\n        <a class=\"thin\" href=\"https://msdsmarine.com/\" target=\"_blank\"><img class=\"rounded mx-auto d-block\" src=\"/img/MSDS-768.png\" height=\"50px\" alt=\"\" /></a>\n    </div>\n    <div class=\"col-sm\">\n        <a class=\"thin\" href=\"https://runette.co.uk\" target=\"_blank\"><img class=\"rounded mx-auto d-block\" src=\"/img/runette_long.png\" height=\"30px\" alt=\"\" /></a>\n    </div>\n</div>\n\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'List2string'\n})\nexport class BcpList2stringPipe implements PipeTransform {\n\n  transform(value: string[], ): string {\n\n    return value.join();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {  Material, GunCategory, RecordStatus, RecordQuality, Order } from './bcp-filter-values.service';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BcpMapDataService {\n\n  private _material: Material = \"All\";\n  private _gunCategory: GunCategory = \"All\";\n  private _recordQuality : RecordQuality = \"All\";\n  private _recordStatus : RecordStatus = \"All\";\n  private _order : Order = \"Order\";\n  private _ownRecords : boolean = false;\n  private _boundingBox: google.maps.LatLngBounds;\n\n  filteredData: MapData;\n\n  private data : MapData;\n\n  constructor() { \n    this.data= [{\n      gunid: 10102,\n      site: \"Test Gun\",\n      location: new google.maps.LatLng(52.0,0.0),\n      category: \"Breech Loading\",\n      material: \"Cast Iron\",\n      images:[{\n        original: \"https://www.googleapis.com/download/storage/v1/b/ultima-ratio-221014.appspot.com/o/prod%2F24%2FIMG_20190313_144734.jpg%2Foriginal?generation=1552481422926554&alt=media\",\n        s200: \"https://www.googleapis.com/download/storage/v1/b/ultima-ratio-221014.appspot.com/o/prod%2F24%2FIMG_20190313_144734.jpg%2Foriginal?generation=1552481422926554&alt=media\",\n        s32: \"https://www.googleapis.com/download/storage/v1/b/ultima-ratio-221014.appspot.com/o/prod%2F24%2FIMG_20190313_144734.jpg%2Foriginal?generation=1552481422926554&alt=media\"\n      },\n      {\n        original: \"https://www.googleapis.com/download/storage/v1/b/ultima-ratio-221014.appspot.com/o/prod%2F24%2FIMG_20190313_144734.jpg%2Foriginal?generation=1552481422926554&alt=media\",\n        s200: \"https://www.googleapis.com/download/storage/v1/b/ultima-ratio-221014.appspot.com/o/prod%2F24%2FIMG_20190313_144734.jpg%2Foriginal?generation=1552481422926554&alt=media\"\n      },\n    ],\n    description:\"a short description\",\n    name: \"Paul Harwood\",\n    date: new Date(),\n    displayName: \"A Test Gun\",\n    context: \"The Context\",\n    collection: true,\n    collName: \"The Collection\",\n    collRef: \"02-33-54\",\n    markings: true,\n    markDetails: \"The Markeings\",\n    interpretations: true,\n    interDetails: \"The Interpretations\",\n    country: \"UK\",\n    geocode: {places:[{name:\"places name\"}], geolocation:[{formatted_address: \" geolocation result\"}]},\n    user_id: \"string\",\n    status: \"Auto\",\n    measurements: {length: 10, scale: false},\n    mouldingCode: \"ABC\",\n    muzzleCode: \"B\",\n    casCode: \"C\",\n    buttonCode: \"D\",\n\n    }];\n    this.setFilter();\n  }\n\n  set material(value: Material) {\n    this._material = value;\n    this.setFilter();\n  }\n  get material():Material{\n    return this._material;\n  }\n\n  set gunCategory(value: GunCategory) {\n    this._gunCategory = value;\n    this.setFilter();\n  }\n  get gunCategory():GunCategory{\n    return this._gunCategory;\n  }\n\n  set recordQuality(value: RecordQuality) {\n    this._recordQuality = value;\n    this.setFilter();\n  }\n  get recordQuality():RecordQuality{\n    return this._recordQuality;\n  }\n\n  set recordStatus(value: RecordStatus) {\n    this._recordStatus = value;\n    this.setFilter();\n  }\n  get recordStatus():RecordStatus{\n    return this._recordStatus;\n  }\n\n  set order(value: Order) {\n    this._order = value;\n    this.setFilter();\n  }\n  get order():Order{\n    return this._order;\n  }\n\n  set ownRecords(value: boolean) {\n    this._ownRecords = value;\n    this.setFilter();\n  }\n  get ownRecords():boolean{\n    return this._ownRecords;\n  }\n\n  set boundingBox(bbox: google.maps.LatLngBounds) {\n    this._boundingBox = bbox;\n    this.setFilter();\n  }\n\n  get boundingBox(): google.maps.LatLngBounds {\n    return this._boundingBox;\n  }\n\n\n  private setFilter():void {\n    this.filteredData = this.data\n  }\n\n}\n\nexport interface DataItem {\n  gunid: number;\n  images: {[key:string]:string}[];\n  name?: string;\n  location?: google.maps.LatLng;\n  material?: Material;\n  category?: GunCategory;\n  description?:string;\n  date?: Date;\n  site?: string;\n  displayName?: string;\n  context?: string;\n  collection?: boolean;\n  collName?: string;\n  collRef?: string;\n  markings?: boolean;\n  markDetails?: string;\n  interpretations?: boolean;\n  interDetails?: string;\n  country?: string;\n  geocode?: Geocode;\n  user_id?: string;\n  status?: RecordStatus;\n  measurements?: Measurements;\n  mouldingCode?: string;\n  muzzleCode?: string;\n  casCode?: string;\n  buttonCode?: string;\n}\n\nexport type MapData = DataItem[];\n\nexport interface Measurements {\n  scale: boolean;\n  length?: number;\n  baseRing?: number;\n  muzzle?: number;\n  bore?: number;\n  trunnionPosition?: number;\n  trunnionWidth?: number;\n  trunnionDiameter?: number;\n  trunnionOffset?: number;\n}\n\nexport interface Geocode{\n  places: [{[key:string]:string}];\n  geolocation: [{[key:string]:string}];\n  default?: string;\n  country?: string;\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-bcp-new-record',\n  templateUrl: './bcp-new-record.component.html',\n  styleUrls: ['./bcp-new-record.component.scss']\n})\nexport class BcpNewRecordComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>bcp-new-record works!</p>\n","import { Component, OnInit, OnChanges} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport { DataItem } from '../bcp-map-data.service';\nimport {BcpMapDataService} from '../bcp-map-data.service';\n\n\n@Component({\n  selector: 'app-bcp-record-detail',\n  templateUrl: './bcp-record-detail.component.html',\n  styleUrls: ['./bcp-record-detail.component.scss']\n})\nexport class BcpRecordDetailComponent implements OnInit, OnChanges {\n\n  gun: DataItem;\n  edit: boolean= false;\n  index: number;\n  currentScreen: string = \"observer\";\n\n\n\n  constructor(public request: ActivatedRoute, public mapData: BcpMapDataService ) {\n\n   }\n\n  ngOnChanges(): void {\n    let a;\n  }\n\n  ngOnInit(): void {\n    this.request.queryParamMap.subscribe(pmap => {\n      this.index = this.mapData.filteredData.findIndex(element => element.gunid ===  parseInt(pmap.get('gunid')));\n      this.gun = this.mapData.filteredData[this.index];\n    });\n  }\n}\n","\n<div class=\"container py-5\">\n    <form  #detail=\"ngForm\">\n        <div class=\"row p-3  bg-ur\" >\n            <div class=\"media\">\n                <a class=\"align-self-center mr-3 fancybox\" *ngIf=\"gun\" [href]=\"gun.images[0].original\"><img [src]=\"gun.images[0].s200\" height=\"70px\" alt=\"\"></a>\n            </div>\n            <div class=\"media-body  p-2\">\n                <div class=\"row\">\n                    <div class=\"col-sm-6\">\n                        <h2 *ngIf=\"gun\">Gun ID : {{ gun.gunid }}</h2>\n                    </div>\n                    <div class=\"col-sm-6\">\n                        <div class=\"float-right\" >\n                            <p class=\"text-muted\" *ngIf=\"!edit\"> Read-only </p>\n                            <button class=\"btn btn-secondary\" type=\"button\" onclick=\"link_here()\" data-toggle=\"popover\"  data-content=\"A permanent link to this record has been copied to the clipboard\">Link here</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"tab-content\" id=\"nav-tabContent\">\n            <bcp-record-observer *ngIf=\"currentScreen == 'observer'\"\n                [gun]=\"gun\"\n            ></bcp-record-observer>\n            <bcp-record-reporter *ngIf=\"currentScreen == 'reporter'\"\n                [gun]=\"gun\"\n            ></bcp-record-reporter>\n            <bcp-record-surveyor *ngIf=\"currentScreen == 'surveyor'\"\n                [gun]=\"gun\"\n            ></bcp-record-surveyor>\n        </div>\n    </form>\n    <button mat-fab routerLink=\"/new_record\" color=\"primary\" ngClass='fab'>\n        <mat-icon color='accent' ngClass='fab-text'>\n            add\n        </mat-icon>\n    </button>\n\n\n    <div class=\"row fixed-bottom  bg-light \">\n        <div class=\"col-3\">\n            <span class=\"btm-nav float-left mx-3 my-1 px-3\" onclick=\"last()\"><i class=\"arrow left\"></i><span class=\"d-none d-sm-inline\">Prev</span></span>\n        </div>\n        <div class=\"col-6\">\n            <div class=\"mx-auto\">\n                <mat-button-toggle-group appearance=\"legacy\" [(value)]=\"currentScreen\"> \n                    <mat-button-toggle  id=\"observer\" role=\"tab\" aria-controls=\"list-observer\" value=\"observer\" ><span class=\"d-inline d-sm-none\">O</span><span class=\"d-none d-sm-inline\">Observer</span></mat-button-toggle>\n                    <mat-button-toggle id=\"reporter\" role=\"tab\" aria-controls=\"list-reporter\" value=\"reporter\"><span class=\"d-inline d-sm-none\">R</span><span class=\"d-none d-sm-inline\">Reporter</span></mat-button-toggle>\n                    <mat-button-toggle id=\"surveyor\" role=\"tab\" aria-controls=\"list-surveyor\" value=\"surveyor\"><span class=\"d-inline d-sm-none\">S</span><span class=\"d-none d-sm-inline\">Surveyor</span></mat-button-toggle>\n                </mat-button-toggle-group>\n            </div> \n        </div>     \n        <div class=\"col-3\">\n            <span class=\" btm-nav float-right mx-3 my-1 px-3\" onclick=\"next()\"><span class=\"d-none d-sm-inline\">Next</span> <i class=\"arrow right\"></i> </span>\n        </div>\n    </div>\n</div>\n\n\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ControlContainer, NgForm } from '@angular/forms';\nimport { DataItem } from '../bcp-map-data.service';\nimport {BcpFilterValuesService} from '../bcp-filter-values.service';\nimport {BcpUserService, BcpUser, BcpUserStanding} from '../bcp-user.service'\n\n@Component({\n  selector: 'bcp-record-observer',\n  templateUrl: './bcp-record-observer.component.html',\n  styleUrls: ['./bcp-record-observer.component.css'],\n  viewProviders: [ { provide: ControlContainer, useExisting: NgForm } ]\n})\nexport class BcpRecordObserverComponent implements OnInit {\n\n  @Input()\n  gun: DataItem;\n\n  constructor(public DATA_VALUES: BcpFilterValuesService, public user: BcpUserService ) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-6\">\n        <table  class=\"table table-striped\">\n            <thead class=\"thead-dark\">\n            <th colspan='4' scope=\"row\">Basic Information</th>\n            </thead>\n            <tbody>\n            <tr>\n                <td >Type of Gun</td>\n                <td colspan=\"3\"> \n                    <div class=\"border border-light\">\n                        <mat-select [(ngModel)]=\"gun.category\" name=\"category\">\n                            <mat-option *ngFor=\"let category of DATA_VALUES.GUN_CATEGORIES\" [value]=\"category\">\n                              {{category}}\n                            </mat-option>\n                          </mat-select>  \n                    </div>\n                </td>\n            </tr>\n            <tr>\n                <td>Material</td>\n                <td colspan=\"3\"> \n                    <div class=\"border border-light\">\n                        <mat-select [(ngModel)]=\"gun.material\" name=\"material\">\n                            <mat-option *ngFor=\"let material of DATA_VALUES.MATERIAL\" [value]=\"material\">\n                              {{material}}\n                            </mat-option>\n                          </mat-select>  \n                    </div>\n                </td>\n            </tr>\n            <tr>\n                <td >Short Desc</td>\n                <td colspan=\"3\">\n                    <textarea class=\"w-100\" rows=\"2\" name=\"description\" placeholder=\"Description\" [(ngModel)]=\"gun.description\">{{ gun.description }}</textarea> </td>\n            </tr>\n            <tr>\n                <td >Author</td>\n                <td><input class=\"form-control\" type=\"text\" name=\"name\" value=\"{{gun.name }}\" placeholder=\"Name\" readonly style=\"max-width:10em;\"></td>\n                <td>Date <span class=\"d-none d-md-inline\">Recorded</span></td>\n                <td class=\"\">{{gun.date | date:'shortDate'}}</td>\n            </tr>\n            </tbody>\n        </table>\n        <table *ngIf=\"user\" class=\"table table-striped\">\n            <tbody>\n            <tr>\n                <div class=\"row\">\n                    <div class=\"col-sm-6\">\n                        <mat-slide-toggle [(ngModel)]=\"gun.markings\" name=\"markings\">Markings?</mat-slide-toggle>\n                    </div>\n                    <div class=\"col-sm-6\">\n                        <mat-slide-toggle [(ngModel)]=\"gun.interpretations\" name=\"interpretations\">Information board?</mat-slide-toggle>\n                    </div>\n                </div>\n            </tr>\n            </tbody>\n        </table>\n        <table class=\"table table-striped\" *ngIf=\"user.login\">\n            <tbody>\n                <tr *ngIf=\"gun.markings\">\n                    <td>\n                        Describe the Markings\n                    </td>\n                    <td>\n                        <textarea class=\"w-100\" name=\"mark_details\" rows='2' placeholder=\"Details\" [(ngModel)]=\"gun.markDetails\">{{gun.markDetails}}</textarea>\n                    </td>\n                </tr>\n                <tr  *ngIf=\"gun.interpretations\">\n                    <td>\n                        What does the board say?\n                    </td>\n                    <td>\n                        <textarea class=\"w-q00\" rows='2' name=\"inter_details\"  placeholder=\"Details\" [(ngModel)]=\"gun.interDetails\">{{gun.interDetails}}</textarea>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n    \n\n    <div class=\"col-md-6\">\n        <table  class=\"table table-striped\">\n            <thead class=\"thead-dark\">\n                <th colspan='2' scope=\"row\">Context</th>\n            </thead>\n            <tbody>\n                <tr>\n                    <td>Name</td>\n                    <td><textarea class=\"w-100\" rows='1' name=\"display_name\" id=\"display_name\" placeholder=\"Give a name to the site\" [(ngModel)]=\"gun.displayName\">{{gun.displayName}}{</textarea></td>\n                </tr>\n                <tr>\n                    <td>Location</td>\n                    <td>\n                        <mat-select [(ngModel)]=\"gun.site\" name=\"site\">\n                            <mat-option *ngFor=\"let site of gun.geocode.places\" [value]=\"site.name\">\n                                {{site.name}}\n                            </mat-option>\n                            <mat-option *ngFor=\"let site of gun.geocode.geolocation\" [value]=\"site.formatted_address\">\n                                {{site.formatted_address}}\n                            </mat-option>\n                        </mat-select>  \n\n                    </td>\n                </tr>\n                <tr>\n                    <td>Description of Cannon Location</td>\n                    <td><textarea class=\"w-100\" rows='2' name=\"context\" placeholder=\"Describe context\" [(ngModel)]=\"gun.context\">{{gun.context}}</textarea></td>\n                </tr>\n                <tr *ngIf=\"user.login\">\n                    <td colspan='2'>\n                        <mat-slide-toggle [(ngModel)]=\"gun.collection\" name=\"collection\"><small class=\"text-wrap\">Is this gun part of a  museum, gallery or collection or on the grounds of a heritage site like a castle or recognised archeological site?</small></mat-slide-toggle>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n        <table class=\"table table-striped\" *ngIf=\"user.login && gun.collection\">\n            <tbody>\n                <tr >\n                    <td>Name of Museum / Gallery / Heritage Site / Collection</td>\n                    <td><textarea class=\"w-100\" rows='1' name=\"coll_name\" placeholder=\"Collection name\" [(ngModel)]=\"gun.collName\">{{gun.collName}}</textarea></td>\n\n                </tr>\n                <tr >\n                    <td>Collection Ref</td>\n                    <td><input class=\"w-100\" type=\"text\" name=\"coll_ref\" placeholder=\"Collection reference\" [(ngModel)]=\"gun.collRef\"></td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n<!--- <div class=\"row bg-light pt-3\">\n<div class=\"col-md-6\">\n<h3 class=\"bold\">Location</h3>\n<div id=\"map_canvas\" class=\"map-container-inline\" > </div>\n<script>\n    window.initMap = function () {\n        map_icons = {\n                'BRONZE': \"/img/cannon_bronze.png\",\n                'GOLD': \"/img/cannon_gold.png\",\n                'SILVER': \"/img/cannon_silver.png\"\n            };\n\n        marker_quality = \"{{gun.quality.name}}\";\n        let location;\n        if ( {{user is not none | lower}}) {\n            location = {\n                lat: parseFloat($('#lat').val()),\n                lng: parseFloat($('#lon').val())\n                };\n        } else {\n            location = {\n            lat: {{ gun.location.latitude }},\n            lng: {{ gun.location.longitude }}\n            };\n        };\n        map = new google.maps.Map(document.getElementById('map_canvas'), {\n            zoom: 12,\n            center: location,\n            mapTypeId: google.maps.MapTypeId.ROADMAP,\n            zoomControl: true,\n            mapTypeControl: false,\n            scaleControl: true,\n            streetViewControl: false,\n            rotateControl: true,\n            fullscreenControl: true\n        });\n        marker = null;\n        reset_map(location)\n    };\n</script>\n{% if user %}\n<div class=\"row\">\n    <div class=\"col-4\">\n        <div class=\"custom-control custom-radio\">\n            <input type=\"radio\" name=\"geolocation\" class=\"custom-control-input\" id=\"latlon\" checked onchange=\"radio_button('geolocation','latlon')\" >\n            <label class=\"custom-control-label\" for=\"latlon\">Lat/Lon</label>\n        </div>\n    </div>\n    <div class=\"col-4\">\n        <div class=\"custom-control custom-radio\">\n            <input type=\"radio\" name=\"geolocation\" class=\"custom-control-input\" id=\"bng\"  onchange=\"LL_convert('#detail')\" >\n            <label class=\"custom-control-label\" for=\"bng\">Grid Ref</label>\n        </div>\n    </div>\n    <div class=\"col-4\">\n        <div class=\"custom-control custom-radio\">\n            <input type=\"radio\" name=\"geolocation\" class=\"custom-control-input\" id=\"locate\"  onchange=\"radio_button('geolocation',  'locate')\" >\n            <label class=\"custom-control-label\" for=\"locate\">Device Location</label>\n        </div>\n    </div>\n</div>\n\n\n\n<div class=\"row latlon\">\n    <div class=\"col-md-2\">\n        Lat\n    </div> <div class=\"col-md-3\">\n        <input class=\"form-control\" type=\"text\" id=\"lat\" name=\"lat\" value=\"{{ gun.location.latitude }}\" >\n    </div> <div class=\"col-md-2\">\n        Long\n    </div> <div class=\"col-md-3\">\n        <input class=\"form-control\" type=\"text\" id=\"lon\" name=\"lon\" value=\"{{ gun.location.longitude }}\" >\n    </div>\n    <div class=\"col-md-2\">\n        <button class=\"btn btn-primary\" type=\"button\" onclick=\"reset_map(null)\">Centre</button>\n    </div>\n</div>\n<div class=\"row latlon\">\n    <small class=\"text-muted mx-auto\">All Lat/lon coordinates must be in WGS84</small>\n</div>\n<div class=\"row bng\">\n    <div class=\"col-md-2\">\n        East\n    </div>\n    <div class=\"col-md-3\">\n        <input class=\"form-control\" type=\"text\" name=\"eastings\" id=\"eastings\" value=\"\" >\n    </div>\n    <div class=\"col-md-2\">\n        North\n    </div>\n    <div class=\"col-md-3\">\n        <input class=\"form-control\" type=\"text\" name=\"northings\" id=\"northings\" value=\"\">\n   </div>\n    <div class=\"col-md-2\">\n        <button class=\"btn btn-small btn-primary\" type=\"button\" onclick=\"BNG_convert('bronze')\">GoTo</button>\n    </div>\n</div>\n<div class=\"row bng\">\n    <small class=\"text-muted mx-auto\">Conversion provided by British Geological Survey <a href=\"https://www.bgs.ac.uk/data/webservices/convertForm.cfm#bngToLatLng\">link</a></small>\n</div>\n<div class=\"row locate\">\n    <button class=\"btn btn-primary mx-auto d-block\" type=\"button\" onclick=\"getLocation()\">Current Location</button>\n</div>\n{% endif %}\n</div>\n<div class=\"col-md-6\">\n{% if user %}\n<div class=\"row\"><div class=\"col-3\">\n<h3 class=\"bold\">Photos</h3></div>\n<div class=\"col-9\">\n<div class=\"progress hidden\" >\n<div class=\"progress-bar progress-bar-striped progress-bar-animated\" role=\"progressbar\" style=\"width: 0%\" aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n</div>\n</div></div><div class=\"row\">\n<div class=\"input-group mb-3\">\n    <div class=\"input-group-prepend\">\n        <button type=\"button\" class=\"btn btn-primary\" id=\"file-upload\" >Upload</span>\n    </div>\n\n<div class=\"custom-file\">\n    <input type=\"file\" id=\"file-name\" multiple accept=\"image/jpeg, image/png, image/bmp, image/eps, image/gif, image/tiff, JPEG, PNG, GOF,EPS,TIFF\" class=\"custom-file-input update-ignore\" id=\"inputGroupFile01\" aria-describedby=\"inputGroupFileAddon01\">\n    <label class=\"custom-file-label text-truncate\" for=\"inputGroupFile01\">Choose file</label>\n</div>\n</div>\n</div>\n{% endif %} \n<div class=\"imglist\" id=\"imgs\">\n{% for image in images %}\n<a href=\"{{image.original|safe}}\" data-fancybox=\"image-gallery\" data-caption=\"cannon photo\">\n    <img src=\"{{image.s200|safe}}\" alt=\"\" />\n</a>\n{% endfor %}\n</div>\n</div> \n</div> --->","import { Component, OnInit, Input, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\nimport { ControlContainer, NgForm, NgModel } from '@angular/forms';\nimport { DataItem } from '../bcp-map-data.service';\nimport {BcpFilterValuesService} from '../bcp-filter-values.service';\nimport {BcpUserService, BcpUser, BcpUserStanding} from '../bcp-user.service'\n\n@Component({\n  selector: 'bcp-record-reporter',\n  templateUrl: './bcp-record-reporter.component.html',\n  styleUrls: ['./bcp-record-reporter.component.css'],\n  viewProviders: [ { provide: ControlContainer, useExisting: NgForm } ]\n})\nexport class BcpRecordReporterComponent implements OnInit, AfterViewInit {\n\n  _gun: DataItem;\n  @Input()\n  set gun(gun: DataItem) {\n    this._gun=gun;\n    if (this.cannonSvg) this.updateSvg();\n  };\n\n  get gun(): DataItem {\n    return this._gun\n  }\n\n  scale: string = 'metres';\n\n  @ViewChild('cannon', {static:true}) cannon :ElementRef;\n  @ViewChild(NgModel, {static: false}) model: NgModel;\n  private cannonSvg: any;\n\n\n  constructor(public DATA_VALUES: BcpFilterValuesService, public user: BcpUserService ) { }\n\n  ngOnInit(): void {\n    \n  }\n\n  ngAfterViewInit() : void {\n    this.cannon.nativeElement.onload = () => {\n      this.cannonSvg = this.cannon.nativeElement.contentDocument;\n      this.updateSvg()\n    }\n    this.model.update.subscribe( () => { if (this.cannonSvg) this.updateSvg()});\n  }\n\n\n  scaleToggle($event){\n    if ($event.checked) {\n      this.scale = \"mm\";\n      let keys = Object.keys(this.gun.measurements);\n      keys.forEach(key => this.gun.measurements[key]*= 1000 )\n      } else {\n        this.scale = \"metres\";\n      let keys = Object.keys(this.gun.measurements);\n      keys.forEach(key => this.gun.measurements[key]*= 0.001 )\n      };\n      this.updateSvg();\n    }\n  \n  updateSvg(): void {\n    this.cannonSvg.getElementById('length-text').firstElementChild.innerHTML = this.gun.measurements['length'] ? this.gun.measurements['length'] : 0;\n    this.cannonSvg.getElementById('br-text').firstElementChild.innerHTML = this.gun.measurements['baseRing'] ? this.gun.measurements['baseRing'] : 0;\n    this.cannonSvg.getElementById('muzzle-text').firstElementChild.innerHTML = this.gun.measurements['muzzle'] ? this.gun.measurements['muzzle'] : 0;\n    this.cannonSvg.getElementById('bore-text').firstElementChild.innerHTML = this.gun.measurements['bore'] ? this.gun.measurements['bore'] : 0;\n    this.cannonSvg.getElementById('tp-text').firstElementChild.innerHTML =  this.gun.measurements['trunnionPosition'] ? this.gun.measurements['trunnionPosition'] : 0 ;\n    this.cannonSvg.getElementById('tw-text').firstElementChild.innerHTML = this.gun.measurements['trunnionWidth'] ? this.gun.measurements['trunnionWidth'] : 0 ;\n    this.cannonSvg.getElementById('td-text').firstElementChild.innerHTML = this.gun.measurements['trunnionDiameter'] ? this.gun.measurements['trunnionDiameter']: 0 ;\n    this.cannonSvg.getElementById('to-text').firstElementChild.innerHTML = this.gun.measurements['trunnionOffset'] ? this.gun.measurements['trunnionOffset'] : 0 ;\n    }; \n  \n\n}\n","<div class=\"position-relative\">\n    <div class=\"embed-responsive embed-responsive-16by9\">\n        <object class=\"embed-responsive-item\" #cannon data='../../assets/cannon_chart.svg' type=\"image/svg+xml\"></object>\n   </div>\n    \n    <div class=\"overlap\" >\n    <table  class=\"table table-sm table-dark table-striped mb-5\">\n        <thead class=\"thead-dark\">\n            <th >Measurements</th>\n            <th>\n                    <mat-slide-toggle name=\"scale\" [(ngModel)]=\"gun.measurements.scale\" (change)=\"scaleToggle($event)\" >{{scale}} </mat-slide-toggle>\n            </th>\n        </thead>\n        <tbody class=\"small\">\n        <tr>\n            <td >Length</td>\n            <td><input matInput class=\"w-100\" type=\"text\" name=\"length\" id=\"length\" placeholder=\"Length\" (ngModelChange)=\"updateSvg()\" [(ngModel)]=\"gun.measurements.length\"></td>\n            </tr>\n            <tr>\n            <td>Base Ring Diameter</td>\n            <td><input class=\"w-100\" type=\"text\" name=\"base_ring\" id=\"base_ring\" placeholder=\"Base Ring\"  [(ngModel)]=\"gun.measurements.baseRing\"></td>\n            </tr>\n            <tr>\n            <td>Muzzle Diameter</td>\n            <td><input class=\"w-100\" type=\"text\" name=\"muzzle\" id=\"muzzle\" placeholder=\"Muzzle\" [(ngModel)]=\"gun.measurements.muzzle\"></td>\n            </tr>\n            <tr>\n            <td>Bore Diameter</td>\n            <td><input class=\"w-100\" type=\"text\" name=\"bore\" id=\"bore\" placeholder=\"Bore\"  [(ngModel)]=\"gun.measurements.bore\"></td>\n            </tr>\n            <tr>\n            <td>Trunnion Position</td>\n            <td><input class=\"w-100\" type=\"text\" name=\"trunnion_position\" id=\"trunnion_position\" placeholder=\"Trunnion to BR\"  [(ngModel)]=\"gun.measurements.trunnionPosition\"></td>\n            </tr>\n            <tr>\n            <td>Trunnion Width</td>\n            <td><input class=\"w-100\" type=\"text\" name=\"trunnion_width\" id=\"trunnion_width\" placeholder=\"Trunnion Width\"  [(ngModel)]=\"gun.measurements.trunnionWidth\"></td>\n            </tr>\n            <tr>\n            <td>Trunnion Diameter</td>\n            <td><input class=\"w-100\" type=\"text\" name=\"trunnion_diameter\" id=\"trunnion_diameter\" placeholder=\"Trunnion Dia\"  [(ngModel)]=\"gun.measurements.trunnionDiameter\"></td>\n            </tr>\n            <tr>\n            <td>Trunnion Offset</td>\n            <td><input class=\"w-100\" type=\"text\" name=\"trunnion_offset\" id=\"trunnion_offset\" placeholder=\"Trunnion Offset\"  [(ngModel)]=\"gun.measurements.trunnionOffset\"></td>\n            </tr>\n        </tbody>\n        </table>\n    </div>\n    </div>\n     \n","import { Component, OnInit, Input } from '@angular/core';\nimport { ControlContainer, NgForm } from '@angular/forms';\nimport { DataItem } from '../bcp-map-data.service';\nimport {BcpFilterValuesService} from '../bcp-filter-values.service';\nimport {BcpUserService, BcpUser, BcpUserStanding} from '../bcp-user.service'\n\n@Component({\n  selector: 'bcp-record-surveyor',\n  templateUrl: './bcp-record-surveyor.component.html',\n  styleUrls: ['./bcp-record-surveyor.component.css'],\n  viewProviders: [ { provide: ControlContainer, useExisting: NgForm } ]\n})\nexport class BcpRecordSurveyorComponent implements OnInit {\n \n  @Input() gun: DataItem;\n\n  constructor(public DATA_VALUES: BcpFilterValuesService, public user: BcpUserService ) { }\n\n  ngOnInit(): void {\n    let a;\n  }\n\n\n\n}\n","<div class=\"container\">\n    <mat-accordion class=\"example-headers-align\">\n        <mat-expansion-panel >\n            <mat-expansion-panel-header>\n                <mat-panel-title>\n                    <h3 class=\"bg-primary text-white p-1\">MOULDING CODE</h3> \n                </mat-panel-title>\n                <mat-panel-description>\n                    <textarea class=\"bg-site w-auto\"  rows=\"1\" name=\"moulding\" id=\"moulding\" onclick=\"event.stopPropagation()\" [(ngModel)]=\"gun.mouldingCode\"></textarea>\n                </mat-panel-description>\n            </mat-expansion-panel-header>\n                <div class=\"row\">\n                    <div class=\"card\">\n                        <img src=\"../../assets/mouldings.png\" class=\"card-img-top mx-auto\" alt=\"...\" style=\"max-width: 600px\">\n                        <div class=\"card-body\">\n                            <p class=\"card-text text-center bold\">\n                                Add the Moulding codes for each ring in order - from the Base Ring to the Muzzle - using the RIng Divider \"/\" between each ring. To delete or change, edit the text above directly.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <button mat-button class=\"image-checkbox col-4 text-center \">\n                        <span class=\"\"><h1>A</h1><p><small>Astragal</small></p></span>\n                        <img class=\"img-fluid\"  width=\"400px\" src=\"../../assets/A.png\">\n                    </button>\n                    <button mat-button class=\"image-checkbox col-4 text-center \">\n                        <span class=\"\"><h1>B</h1><p><small>Band</small></p></span>\n                        <img class=\"img-fluid\"  width=\"400px\" src=\"../../assets/B.png\">\n                    </button>\n                    <button mat-button class=\"image-checkbox col-4 text-center \">\n                        <span class=\"\"><h1>S</h1><p><small>Slope</small></p></span>\n                        <img class=\"img-fluid\"  width=\"400px\" src=\"../../assets/S.png\">   \n                    </button> \n                </div>\n                <div class=\"row\">\n                    <button mat-button class=\"image-checkbox col-4 text-center \">\n                        <span class=\"\"><h1>F</h1><p><small>Fillet</small></p></span>\n                        <img class=\"img-fluid\"  width=\"400px\" src=\"../../assets/F.png\">\n                    </button> \n                    <button mat-button class=\"image-checkbox col-4 text-center \">\n                        <span class=\"\"><h1>O</h1><p><small>Ogee</small></p></span>\n                        <img class=\"img-fluid\"  width=\"400px\" src=\"../../assets/O.png\">\n                    </button> \n                    <button mat-button class=\"image-checkbox col-4 text-center \">\n                        <span class=\"\"><h1>Q</h1><p><small>Quadrant</small></p></span>\n                        <img class=\"img-fluid\"  width=\"400px\" src=\"../../assets/Q.png\">\n                    </button> \n                </div>\n                <div class=\"row\">\n                    <button mat-button class=\"image-checkbox col-4 text-center \">\n                        <span class=\"\"><h1>C</h1><p><small>Concave</small></p></span>\n                        <img class=\"img-fluid\"  width=\"400px\" src=\"../../assets/C.png\">\n                    </button> \n                    <button mat-button class=\"image-checkbox col-4 text-center \">\n                        <span class=\"\"><h1>/</h1><small>Ring Divider</small></span>\n                    </button> \n                    <button mat-button class=\"image-checkbox col-4 text-center \">\n                        <span class=\"\"><h1>X</h1><small>None</small></span>\n                    </button>\n                </div>\n            </mat-expansion-panel>\n            <mat-expansion-panel aria-label=\"Muzzle Codes\">\n                <mat-expansion-panel-header>\n                <mat-panel-title>\n                    <h3 class=\"bg-primary text-white p-1\">MUZZLE CODE</h3> \n                </mat-panel-title>\n                <mat-panel-description>\n                    <h3 class=\"bg-primary text-white p-1\">{{gun.muzzleCode}}</h3>\n                </mat-panel-description>\n                </mat-expansion-panel-header>\n                <mat-button-toggle-group name=\"muzzle\" [(ngModel)]=\"gun.muzzleCode\">\n                    <div class=\"row\">\n                        <mat-button-toggle class=\"image-checkbox col-4 text-center\" value=\"R\">\n                            <span class=\"\"><h1>R</h1><p><small>Tulip</small></p></span>\n                            <img class=\"img-fluid\"  width=\"400px\" src=\"../../assets/R.png\">\n                        </mat-button-toggle>\n                        <mat-button-toggle class=\"image-checkbox col-4 text-center\" value=\"F\">\n                            <span class=\"\"><h1>F</h1><p><small>Flared Cone</small></p></span>\n                            <img class=\"img-fluid\"  width=\"400px\" src=\"../../assets/F.png\">\n                        </mat-button-toggle>\n                        <mat-button-toggle class=\"image-checkbox col-4 text-center\" value=\"T\">\n                            <span class=\"\"><h1>T</h1><p><small>Tapered Cone</small></p></span>\n                            <img class=\"img-fluid\"  width=\"400px\" src=\"../../assets/T.png\">\n                        </mat-button-toggle>\n                    </div>\n                    <div class=\"row\">\n                        <mat-button-toggle class=\"image-checkbox col-4 text-center\" value=\"P\">\n                            <span class=\"\"><h1>P</h1><p><small>Cylinder</small></p></span>\n                            <img class=\"img-fluid\"  width=\"400px\" src=\"../../assets/P.png\">\n                        </mat-button-toggle>\n                        <mat-button-toggle class=\"image-checkbox col-4 text-center\" value=\"E\">\n                            <span class=\"\"><h1>E</h1><p><small>Coronice</small></p></span>\n                            <img class=\"img-fluid\"  width=\"400px\" src=\"../../assets/E.png\">\n                        </mat-button-toggle>\n                        <mat-button-toggle class=\"image-checkbox col-4 text-center\" value=\"X\">\n                            <span class=\"\"><h1>X</h1><p><small>None</small></p></span>\n                        </mat-button-toggle>\n                    </div>\n                </mat-button-toggle-group>  \n            </mat-expansion-panel>\n            <mat-expansion-panel aria-label=\"Cascable Codes\">\n                <mat-expansion-panel-header>\n                <mat-panel-title>\n                    <h3 class=\"bg-primary text-white p-1\">CASCABLE CODE</h3> \n                </mat-panel-title>\n                <mat-panel-description>\n                    <h3 class=\"bg-primary text-white p-1\">{{gun.casCode}}</h3>\n                </mat-panel-description>\n                </mat-expansion-panel-header>\n                <mat-button-toggle-group name=\"cascable\" [(ngModel)]=\"gun.casCode\">\n                <div class=\"row\">\n                    <mat-button-toggle class=\"image-checkbox col-4 text-center\" value=\"K\">\n                        <span class=\"\"><h1>K</h1><p><small>Conical</small></p></span>\n                        <img class=\"img-fluid\"  width=\"400px\" src=\"../../assets/K.png\">\n                    </mat-button-toggle>\n                    <mat-button-toggle class=\"image-checkbox col-4 text-center\" value=\"O\">\n                        <span class=\"\"><h1>O</h1><p><small>Spherical</small></p></span>\n                        <img class=\"img-fluid\"  width=\"400px\" src=\"../../assets/Sph.png\">\n                    </mat-button-toggle>\n                    <mat-button-toggle class=\"image-checkbox col-4 text-center\" value=\"U\">\n                        <span class=\"\"><h1>U</h1><p><small>Concave</small></p></span>\n                        <img class=\"img-fluid\"  width=\"400px\" src=\"../../assets/U.png\">\n                    </mat-button-toggle>\n                </div>\n                <div class=\"row\">\n                    <mat-button-toggle class=\"image-checkbox col-4 text-center\" value=\"D\">\n                        <span class=\"\"><h1>D</h1><small>Flat</small></span>\n                        <img class=\"img-fluid\"  width=\"400px\" src=\"../../assets/Flat.png\">\n                    </mat-button-toggle>\n                    <mat-button-toggle class=\"image-checkbox col-4 text-center\" value=\"X\">\n                        <span class=\"\"><h1>X</h1><small>None</small></span>\n                    </mat-button-toggle>\n                    <div class=\" col-4 nopad text-center \" fxHide.gt-sm>\n                        \n                    </div>\n                    <div class=\" col-4 nopad text-center \" fxHide.gt-sm>\n                        \n                    </div>\n                </div>\n            </mat-button-toggle-group>  \n        </mat-expansion-panel>\n        <mat-expansion-panel aria-label=\"Button Codes\">\n            <mat-expansion-panel-header>\n            <mat-panel-title>\n                <h3 class=\"bg-primary text-white p-1\">BUTTON CODE</h3> \n            </mat-panel-title>\n            <mat-panel-description>\n                <h3 class=\"bg-primary text-white p-1\">{{gun.buttonCode}}</h3>\n            </mat-panel-description>\n            </mat-expansion-panel-header>\n            <mat-button-toggle-group name=\"button\" [(ngModel)]=\"gun.buttonCode\">\n                <div class=\"row\">\n                    <mat-button-toggle class=\"image-checkbox col-4 text-center\" value=\"N\">\n                        <span class=\"\"><h1>N</h1><p><small>Knob</small></p></span>\n                        <img class=\"img-fluid\"  width=\"400px\" src=\"../../assets/N.png\">\n                    </mat-button-toggle>\n                    <mat-button-toggle class=\"image-checkbox col-4 text-center\" value=\"L\">\n                        <span class=\"\"><h1>L</h1><p><small>Knob with Loop</small></p></span>\n                        <img class=\"img-fluid\"  width=\"400px\" src=\"../../assets/L.png\">\n                    </mat-button-toggle>\n                    <mat-button-toggle class=\"image-checkbox col-4 text-center\" value=\"G\">\n                        <span class=\"\"><h1>G</h1><p><small>Spherical</small></p></span>\n                        <img class=\"img-fluid\"  width=\"400px\" src=\"../../assets/G.png\">\n                    </mat-button-toggle>\n                </div>\n                <div class=\"row\">\n                    <mat-button-toggle class=\"image-checkbox col-4 text-center\" value=\"C\">\n                        <span class=\"\"><h1>C</h1><p><small>Cylinder</small></p></span>\n                        <img class=\"img-fluid\"  width=\"400px\" src=\"../../assets/Cyl.png\">\n                    </mat-button-toggle>\n                    <mat-button-toggle class=\"image-checkbox col-4 text-center\" value=\"H\">\n                        <span class=\"\"><h1>H</h1><p><small>Horizontal Ring</small></p></span>\n                        <img class=\"img-fluid\"  width=\"400px\" src=\"../../assets/H.png\">\n                    </mat-button-toggle>\n                    <mat-button-toggle class=\"image-checkbox col-4 text-center\" value=\"V\">\n                        <span class=\"\"><h1>V</h1><p><small>Vertical Ring</small></p></span>\n                        <img class=\"img-fluid\"  width=\"400px\" src=\"../../assets/V.png\">\n                    </mat-button-toggle>\n                </div>\n                <div class=\"row\">\n                    <mat-button-toggle class=\"image-checkbox col-4 text-center\" value=\"E\">\n                        <span class=\"\"><h1>E</h1><p><small>Exended Knob</small></p></span>\n                        <img class=\"img-fluid\"  width=\"400px\" src=\"../../assets/Ext.png\">\n                    </mat-button-toggle>\n                    <mat-button-toggle class=\"image-checkbox col-4 text-center\" value=\"X\">\n                        <span class=\"\"><h1>X</h1><small>None</small></span>\n                    </mat-button-toggle>\n                    <div class=\" col-4 nopad text-center \" fxHide.gt-sm>\n                        \n                    </div>\n                </div>\n            </mat-button-toggle-group>  \n        </mat-expansion-panel>\n    </mat-accordion>\n</div>\n ","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BcpUserService {\n\n  user: BcpUser;\n  login: boolean = false;\n\n  constructor() { \n    this.user = new BcpUser('1');\n    this.login = true;\n  }\n}\n\nexport class BcpUser {\n  name: string;\n  id: string;\n  fireUserData?: string;\n  standing: BcpUserStanding;\n  test_user: boolean;\n  token?: string;\n\n  constructor(id: string) {\n    this.id = id;\n    this.name = \"name\";\n    this.standing = \"OBSERVER\"\n    this.test_user = false;\n  }\n}\n\nexport type BcpUserStanding = \"OBSERVER\" | \"RECORDER\" | \"SURVEYOR\" | \"ADMIN\";\n","namespace google.maps {\n\n    export class LocateControl {\n        public marker: Circle;\n        constructor (map: Map, args: LocateControlOptions, el: HTMLElement ) {\n            let options = args;\n            map.controls[options.position ? options.position : ControlPosition.BOTTOM_LEFT].push(el);\n            this.marker = new Circle({\n                strokeColor: '#0000FF',\n                strokeOpacity: 0.8,\n                strokeWeight: 2,\n                fillColor: '#0000FF',\n                fillOpacity: 0.35,\n            });\n            if (! options.locationOptions) options.locationOptions = {\n                enableHighAccuracy: true,\n                timeout: 100000,\n                maximumAge: 1000000,\n            }\n        }\n    }\n\n    export interface LocateControlOptions {\n        position?: ControlPosition;\n        zoom?: boolean;\n        zoomTo?: number;\n        pan?: boolean;\n        locationOptions?:LocationOptions;\n    }\n\n    export interface LocationOptions {\n        enableHighAccuracy?: boolean;\n        timeout?: number;\n        maximumAge?: number;\n    }\n\n    export type LocateControlStatus = 'off' |  \"on\" | 'moved'\n}\n","///<reference types='googlemaps' />\nimport { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\nimport './google-locate-control';\n\n@Component({\n  selector: 'app-googlemap-locate',\n  templateUrl: './googlemap-locate.component.html',\n  styleUrls: ['./googlemap-locate.component.scss']\n})\nexport class GooglemapLocateComponent implements OnInit {\n  @ViewChild('div', {\"static\": false}) div: ElementRef;\n\n  private _map: google.maps.Map;\n  \n  @Input()\n  options: google.maps.LocateControlOptions\n\n  status: google.maps.LocateControlStatus = 'off';\n\n  private watch: number;\n  private control: google.maps.LocateControl;\n  private position: Position;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  @Input() set map(map: google.maps.Map){\n    if (map) {\n      this._map = map;\n      let status= this.status\n      this.control = new google.maps.LocateControl(map, this.options, this.div.nativeElement );\n      map.addListener('dragstart', function(){\n        status = \"moved\";\n      });\n      map.addListener('zoomstart', function(){\n        status = \"moved\";\n      })\n    }\n  }\n  get map(): google.maps.Map {\n    return this._map\n  }\n\n  onClick(){\n    if(navigator.geolocation && this.status === 'off' ) {\n        this.status = 'on';\n        let position = this.position;\n        this.watch = navigator.geolocation.watchPosition(function(my_position) {\n            position = my_position;\n            let latlng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);\n            this.control.marker.setMap(this._map);\n            this.control.marker.setCenter(latlng);\n            this.control.marker.setRadius(position.coords.accuracy); \n            if (this.options.pan && status !== 'moved') this.map.setCenter(latlng);\n            if (this.options.zoom && status !== 'moved') this.map.setZoom( this.options.zoomTo ? this.options.zoomTo : 17)\n        }, function(e) { console.log(e.message)},this.options.locationOptions);\n    } else if (status == 'on' ) {\n        status = 'off';\n        navigator.geolocation.clearWatch(this.watch);\n        this.control.marker.setMap(null);\n\n    } else if (status == 'moved') {\n        status = 'on';\n        let latlng = new google.maps.LatLng(this.position.coords.latitude, this.position.coords.longitude);\n        this.map.setCenter(latlng);\n    }\n  }\n}\n","<div #div><button draggable=\"false\" title=\"Locate\" aria-label=\"Locate\" type=\"button\" class=\"gm-control-active locate-control\">\n    <mat-icon [ngClass]=\"{\n        'locate-control': true,\n    'locate-selected': status == 'on',\n    'locate-moved': status == 'moved'\n    }\" >gps_fixed</mat-icon>\n</button> \n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}