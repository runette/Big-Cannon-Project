"use strict";try{self["workbox:core:5.1.2"]&&_()}catch(e){}const e=(e,...t)=>{let s=e;return t.length>0&&(s+=` :: ${JSON.stringify(t)}`),s};class t extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}const s=new Set;const n={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},a=e=>[n.prefix,e,n.suffix].filter(e=>e&&e.length>0).join("-"),i=e=>e||a(n.precache),r=e=>e||a(n.runtime);const c=e=>new URL(String(e),location.href).href.replace(new RegExp(`^${location.origin}`),""),o=(e,t)=>e.filter(e=>t in e),h=async({request:e,mode:t,plugins:s=[]})=>{const n=o(s,"cacheKeyWillBeUsed");let a=e;for(const e of n)a=await e.cacheKeyWillBeUsed.call(e,{mode:t,request:a}),"string"==typeof a&&(a=new Request(a));return a},l=async({cacheName:e,request:t,event:s,matchOptions:n,plugins:a=[]})=>{const i=await self.caches.open(e),r=await h({plugins:a,request:t,mode:"read"});let c=await i.match(r,n);for(const t of a)if("cachedResponseWillBeUsed"in t){const a=t.cachedResponseWillBeUsed;c=await a.call(t,{cacheName:e,event:s,matchOptions:n,cachedResponse:c,request:r})}return c},u=async({cacheName:e,request:n,response:a,event:i,plugins:r=[],matchOptions:u})=>{const d=await h({plugins:r,request:n,mode:"write"});if(!a)throw new t("cache-put-with-no-response",{url:c(d.url)});const p=await(async({request:e,response:t,event:s,plugins:n=[]})=>{let a=t,i=!1;for(const t of n)if("cacheWillUpdate"in t){i=!0;const n=t.cacheWillUpdate;if(a=await n.call(t,{request:e,response:a,event:s}),!a)break}return i||(a=a&&200===a.status?a:void 0),a||null})({event:i,plugins:r,response:a,request:d});if(!p)return;const f=await self.caches.open(e),g=o(r,"cacheDidUpdate"),m=g.length>0?await l({cacheName:e,matchOptions:u,request:d}):null;try{await f.put(d,p)}catch(e){throw"QuotaExceededError"===e.name&&await async function(){for(const e of s)await e()}(),e}for(const t of g)await t.cacheDidUpdate.call(t,{cacheName:e,event:i,oldResponse:m,newResponse:p,request:d})},d=l;let p;function f(e){e.then(()=>{})}class g{constructor(e,t,{onupgradeneeded:s,onversionchange:n}={}){this._db=null,this._name=e,this._version=t,this._onupgradeneeded=s,this._onversionchange=n||(()=>this.close())}get db(){return this._db}async open(){if(!this._db)return this._db=await new Promise((e,t)=>{let s=!1;setTimeout(()=>{s=!0,t(new Error("The open request was blocked and timed out"))},this.OPEN_TIMEOUT);const n=indexedDB.open(this._name,this._version);n.onerror=()=>t(n.error),n.onupgradeneeded=e=>{s?(n.transaction.abort(),n.result.close()):"function"==typeof this._onupgradeneeded&&this._onupgradeneeded(e)},n.onsuccess=()=>{const t=n.result;s?t.close():(t.onversionchange=this._onversionchange.bind(this),e(t))}}),this}async getKey(e,t){return(await this.getAllKeys(e,t,1))[0]}async getAll(e,t,s){return await this.getAllMatching(e,{query:t,count:s})}async getAllKeys(e,t,s){return(await this.getAllMatching(e,{query:t,count:s,includeKeys:!0})).map(e=>e.key)}async getAllMatching(e,{index:t,query:s=null,direction:n="next",count:a,includeKeys:i=!1}={}){return await this.transaction([e],"readonly",(r,c)=>{const o=r.objectStore(e),h=t?o.index(t):o,l=[],u=h.openCursor(s,n);u.onsuccess=()=>{const e=u.result;e?(l.push(i?e:e.value),a&&l.length>=a?c(l):e.continue()):c(l)}})}async transaction(e,t,s){return await this.open(),await new Promise((n,a)=>{const i=this._db.transaction(e,t);i.onabort=()=>a(i.error),i.oncomplete=()=>n(),s(i,e=>n(e))})}async _call(e,t,s,...n){return await this.transaction([t],s,(s,a)=>{const i=s.objectStore(t),r=i[e].apply(i,n);r.onsuccess=()=>a(r.result)})}close(){this._db&&(this._db.close(),this._db=null)}}g.prototype.OPEN_TIMEOUT=2e3;const m={readonly:["get","count","getKey","getAll","getAllKeys"],readwrite:["add","put","clear","delete"]};for(const[e,t]of Object.entries(m))for(const s of t)s in IDBObjectStore.prototype&&(g.prototype[s]=async function(t,...n){return await this._call(s,t,e,...n)});const w=async({request:e,fetchOptions:s,event:n,plugins:a=[]})=>{if("string"==typeof e&&(e=new Request(e)),n instanceof FetchEvent&&n.preloadResponse){const e=await n.preloadResponse;if(e)return e}const i=o(a,"fetchDidFail"),r=i.length>0?e.clone():null;try{for(const t of a)if("requestWillFetch"in t){const s=t.requestWillFetch,a=e.clone();e=await s.call(t,{request:a,event:n})}}catch(e){throw new t("plugin-error-request-will-fetch",{thrownError:e})}const c=e.clone();try{let t;t="navigate"===e.mode?await fetch(e):await fetch(e,s);for(const e of a)"fetchDidSucceed"in e&&(t=await e.fetchDidSucceed.call(e,{event:n,request:c,response:t}));return t}catch(e){for(const t of i)await t.fetchDidFail.call(t,{error:e,event:n,originalRequest:r.clone(),request:c.clone()});throw e}};async function y(e,t){const s=e.clone(),n={headers:new Headers(s.headers),status:s.status,statusText:s.statusText},a=t?t(n):n,i=function(){if(void 0===p){const e=new Response("");if("body"in e)try{new Response(e.body),p=!0}catch(e){p=!1}p=!1}return p}()?s.body:await s.blob();return new Response(i,a)}try{self["workbox:precaching:5.1.2"]&&_()}catch(e){}const v=[],R={get:()=>v,add(e){v.push(...e)}};function q(e){if(!e)throw new t("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:s,url:n}=e;if(!n)throw new t("add-to-cache-list-unexpected-type",{entry:e});if(!s){const e=new URL(n,location.href);return{cacheKey:e.href,url:e.href}}const a=new URL(n,location.href),i=new URL(n,location.href);return a.searchParams.set("__WB_REVISION__",s),{cacheKey:a.href,url:i.href}}class x{constructor(e){this._cacheName=i(e),this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map}addToCacheList(e){const s=[];for(const n of e){"string"==typeof n?s.push(n):n&&void 0===n.revision&&s.push(n.url);const{cacheKey:e,url:a}=q(n),i="string"!=typeof n&&n.revision?"reload":"default";if(this._urlsToCacheKeys.has(a)&&this._urlsToCacheKeys.get(a)!==e)throw new t("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(a),secondEntry:e});if("string"!=typeof n&&n.integrity){if(this._cacheKeysToIntegrities.has(e)&&this._cacheKeysToIntegrities.get(e)!==n.integrity)throw new t("add-to-cache-list-conflicting-integrities",{url:a});this._cacheKeysToIntegrities.set(e,n.integrity)}if(this._urlsToCacheKeys.set(a,e),this._urlsToCacheModes.set(a,i),s.length>0){const e="Workbox is precaching URLs without revision "+`info: ${s.join(", ")}\nThis is generally NOT safe. `+"Learn more at https://bit.ly/wb-precache";console.warn(e)}}}async install({event:e,plugins:t}={}){const s=[],n=[],a=await self.caches.open(this._cacheName),i=await a.keys(),r=new Set(i.map(e=>e.url));for(const[e,t]of this._urlsToCacheKeys)r.has(t)?n.push(e):s.push({cacheKey:t,url:e});const c=s.map(({cacheKey:s,url:n})=>{const a=this._cacheKeysToIntegrities.get(s),i=this._urlsToCacheModes.get(n);return this._addURLToCache({cacheKey:s,cacheMode:i,event:e,integrity:a,plugins:t,url:n})});return await Promise.all(c),{updatedURLs:s.map(e=>e.url),notUpdatedURLs:n}}async activate(){const e=await self.caches.open(this._cacheName),t=await e.keys(),s=new Set(this._urlsToCacheKeys.values()),n=[];for(const a of t)s.has(a.url)||(await e.delete(a),n.push(a.url));return{deletedURLs:n}}async _addURLToCache({cacheKey:e,url:s,cacheMode:n,event:a,plugins:i,integrity:r}){const c=new Request(s,{integrity:r,cache:n,credentials:"same-origin"});let o,h=await w({event:a,plugins:i,request:c});for(const e of i||[])"cacheWillUpdate"in e&&(o=e);if(!(o?await o.cacheWillUpdate({event:a,request:c,response:h}):h.status<400))throw new t("bad-precaching-response",{url:s,status:h.status});h.redirected&&(h=await y(h)),await u({event:a,plugins:i,response:h,request:e===s?c:new Request(e),cacheName:this._cacheName,matchOptions:{ignoreSearch:!0}})}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s){return(await self.caches.open(this._cacheName)).match(s)}}createHandler(e=!0){return async({request:s})=>{try{const e=await this.matchPrecache(s);if(e)return e;throw new t("missing-precache-entry",{cacheName:this._cacheName,url:s instanceof Request?s.url:s})}catch(t){if(e)return fetch(s);throw t}}}createHandlerBoundToURL(e,s=!0){if(!this.getCacheKeyForURL(e))throw new t("non-precached-url",{url:e});const n=this.createHandler(s),a=new Request(e);return()=>n({request:a})}}let N;const U=()=>(N||(N=new x),N);const b=(e,t)=>{const s=U().getURLsToCacheKeys();for(const n of function*(e,{ignoreURLParametersMatching:t,directoryIndex:s,cleanURLs:n,urlManipulation:a}={}){const i=new URL(e,location.href);i.hash="",yield i.href;const r=function(e,t=[]){for(const s of[...e.searchParams.keys()])t.some(e=>e.test(s))&&e.searchParams.delete(s);return e}(i,t);if(yield r.href,s&&r.pathname.endsWith("/")){const e=new URL(r.href);e.pathname+=s,yield e.href}if(n){const e=new URL(r.href);e.pathname+=".html",yield e.href}if(a){const e=a({url:i});for(const t of e)yield t.href}}(e,t)){const e=s.get(n);if(e)return e}};let T=!1;function E(e){T||((({ignoreURLParametersMatching:e=[/^utm_/],directoryIndex:t="index.html",cleanURLs:s=!0,urlManipulation:n}={})=>{const a=i();self.addEventListener("fetch",i=>{const r=b(i.request.url,{cleanURLs:s,directoryIndex:t,ignoreURLParametersMatching:e,urlManipulation:n});if(!r)return;let c=self.caches.open(a).then(e=>e.match(r)).then(e=>e||fetch(r));i.respondWith(c)})})(e),T=!0)}const L=e=>{const t=U(),s=R.get();e.waitUntil(t.install({event:e,plugins:s}).catch(e=>{throw e}))},O=e=>{const t=U();e.waitUntil(t.activate())};try{self["workbox:routing:5.1.2"]&&_()}catch(e){}const C=e=>e&&"object"==typeof e?e:{handle:e};class K{constructor(e,t,s="GET"){this.handler=C(t),this.match=e,this.method=s}}class k extends K{constructor(e,t,s){super(({url:t})=>{const s=e.exec(t.href);if(s&&(t.origin===location.origin||0===s.index))return s.slice(1)},t,s)}}class M{constructor(){this._routes=new Map}get routes(){return this._routes}addFetchListener(){self.addEventListener("fetch",e=>{const{request:t}=e,s=this.handleRequest({request:t,event:e});s&&e.respondWith(s)})}addCacheListener(){self.addEventListener("message",e=>{if(e.data&&"CACHE_URLS"===e.data.type){const{payload:t}=e.data,s=Promise.all(t.urlsToCache.map(e=>{"string"==typeof e&&(e=[e]);const t=new Request(...e);return this.handleRequest({request:t})}));e.waitUntil(s),e.ports&&e.ports[0]&&s.then(()=>e.ports[0].postMessage(!0))}})}handleRequest({request:e,event:t}){const s=new URL(e.url,location.href);if(!s.protocol.startsWith("http"))return;const{params:n,route:a}=this.findMatchingRoute({url:s,request:e,event:t});let i,r=a&&a.handler;if(!r&&this._defaultHandler&&(r=this._defaultHandler),r){try{i=r.handle({url:s,request:e,event:t,params:n})}catch(e){i=Promise.reject(e)}return i instanceof Promise&&this._catchHandler&&(i=i.catch(n=>this._catchHandler.handle({url:s,request:e,event:t}))),i}}findMatchingRoute({url:e,request:t,event:s}){const n=this._routes.get(t.method)||[];for(const a of n){let n;const i=a.match({url:e,request:t,event:s});if(i)return n=i,(Array.isArray(i)&&0===i.length||i.constructor===Object&&0===Object.keys(i).length||"boolean"==typeof i)&&(n=void 0),{route:a,params:n}}return{}}setDefaultHandler(e){this._defaultHandler=C(e)}setCatchHandler(e){this._catchHandler=C(e)}registerRoute(e){this._routes.has(e.method)||this._routes.set(e.method,[]),this._routes.get(e.method).push(e)}unregisterRoute(e){if(!this._routes.has(e.method))throw new t("unregister-route-but-not-found-with-method",{method:e.method});const s=this._routes.get(e.method).indexOf(e);if(!(s>-1))throw new t("unregister-route-route-not-registered");this._routes.get(e.method).splice(s,1)}}let S;const A=()=>(S||(S=new M,S.addFetchListener(),S.addCacheListener()),S);function P(e,s,n){let a;if("string"==typeof e){const t=new URL(e,location.href);a=new K(({url:e})=>e.href===t.href,s,n)}else if(e instanceof RegExp)a=new k(e,s,n);else if("function"==typeof e)a=new K(e,s,n);else{if(!(e instanceof K))throw new t("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});a=e}return A().registerRoute(a),a}try{self["workbox:strategies:5.1.2"]&&_()}catch(e){}class W{constructor(e={}){this._cacheName=r(e.cacheName),this._plugins=e.plugins||[],this._fetchOptions=e.fetchOptions,this._matchOptions=e.matchOptions}async handle({event:e,request:s}){"string"==typeof s&&(s=new Request(s));let n,a=await d({cacheName:this._cacheName,request:s,event:e,matchOptions:this._matchOptions,plugins:this._plugins});if(!a)try{a=await this._getFromNetwork(s,e)}catch(e){n=e}if(!a)throw new t("no-response",{url:s.url,error:n});return a}async _getFromNetwork(e,t){const s=await w({request:e,event:t,fetchOptions:this._fetchOptions,plugins:this._plugins}),n=s.clone(),a=u({cacheName:this._cacheName,request:e,response:n,event:t,plugins:this._plugins});if(t)try{t.waitUntil(a)}catch(e){}return s}}const D={cacheWillUpdate:async({response:e})=>200===e.status||0===e.status?e:null};class I{constructor(e={}){if(this._cacheName=r(e.cacheName),this._plugins=e.plugins||[],e.plugins){const t=e.plugins.some(e=>!!e.cacheWillUpdate);this._plugins=t?e.plugins:[D,...e.plugins]}else this._plugins=[D];this._fetchOptions=e.fetchOptions,this._matchOptions=e.matchOptions}async handle({event:e,request:s}){"string"==typeof s&&(s=new Request(s));const n=this._getFromNetwork({request:s,event:e});let a,i=await d({cacheName:this._cacheName,request:s,event:e,matchOptions:this._matchOptions,plugins:this._plugins});if(i){if(e)try{e.waitUntil(n)}catch(a){}}else try{i=await n}catch(e){a=e}if(!i)throw new t("no-response",{url:s.url,error:a});return i}async _getFromNetwork({request:e,event:t}){const s=await w({request:e,event:t,fetchOptions:this._fetchOptions,plugins:this._plugins}),n=u({cacheName:this._cacheName,request:e,response:s.clone(),event:t,plugins:this._plugins});if(t)try{t.waitUntil(n)}catch(e){}return s}}try{self["workbox:cacheable-response:5.1.2"]&&_()}catch(e){}class F{constructor(e={}){this._statuses=e.statuses,this._headers=e.headers}isResponseCacheable(e){let t=!0;return this._statuses&&(t=this._statuses.includes(e.status)),this._headers&&t&&(t=Object.keys(this._headers).some(t=>e.headers.get(t)===this._headers[t])),t}}try{self["workbox:expiration:5.1.2"]&&_()}catch(e){}const j=e=>{const t=new URL(e,location.href);return t.hash="",t.href};class H{constructor(e){this._cacheName=e,this._db=new g("workbox-expiration",1,{onupgradeneeded:e=>this._handleUpgrade(e)})}_handleUpgrade(e){const t=e.target.result.createObjectStore("cache-entries",{keyPath:"id"});t.createIndex("cacheName","cacheName",{unique:!1}),t.createIndex("timestamp","timestamp",{unique:!1}),(async e=>{await new Promise((t,s)=>{const n=indexedDB.deleteDatabase(e);n.onerror=()=>{s(n.error)},n.onblocked=()=>{s(new Error("Delete blocked"))},n.onsuccess=()=>{t()}})})(this._cacheName)}async setTimestamp(e,t){const s={url:e=j(e),timestamp:t,cacheName:this._cacheName,id:this._getId(e)};await this._db.put("cache-entries",s)}async getTimestamp(e){return(await this._db.get("cache-entries",this._getId(e))).timestamp}async expireEntries(e,t){const s=await this._db.transaction("cache-entries","readwrite",(s,n)=>{const a=s.objectStore("cache-entries").index("timestamp").openCursor(null,"prev"),i=[];let r=0;a.onsuccess=()=>{const s=a.result;if(s){const n=s.value;n.cacheName===this._cacheName&&(e&&n.timestamp<e||t&&r>=t?i.push(s.value):r++),s.continue()}else n(i)}}),n=[];for(const e of s)await this._db.delete("cache-entries",e.id),n.push(e.url);return n}_getId(e){return this._cacheName+"|"+j(e)}}class B{constructor(e,t={}){this._isRunning=!1,this._rerunRequested=!1,this._maxEntries=t.maxEntries,this._maxAgeSeconds=t.maxAgeSeconds,this._cacheName=e,this._timestampModel=new H(e)}async expireEntries(){if(this._isRunning)return void(this._rerunRequested=!0);this._isRunning=!0;const e=this._maxAgeSeconds?Date.now()-1e3*this._maxAgeSeconds:0,t=await this._timestampModel.expireEntries(e,this._maxEntries),s=await self.caches.open(this._cacheName);for(const e of t)await s.delete(e);this._isRunning=!1,this._rerunRequested&&(this._rerunRequested=!1,f(this.expireEntries()))}async updateTimestamp(e){await this._timestampModel.setTimestamp(e,Date.now())}async isURLExpired(e){if(this._maxAgeSeconds){return await this._timestampModel.getTimestamp(e)<Date.now()-1e3*this._maxAgeSeconds}return!1}async delete(){this._rerunRequested=!1,await this._timestampModel.expireEntries(1/0)}}class ${constructor(e={}){var t;this.cachedResponseWillBeUsed=async({event:e,request:t,cacheName:s,cachedResponse:n})=>{if(!n)return null;const a=this._isResponseDateFresh(n),i=this._getCacheExpiration(s);f(i.expireEntries());const r=i.updateTimestamp(t.url);if(e)try{e.waitUntil(r)}catch(e){}return a?n:null},this.cacheDidUpdate=async({cacheName:e,request:t})=>{const s=this._getCacheExpiration(e);await s.updateTimestamp(t.url),await s.expireEntries()},this._config=e,this._maxAgeSeconds=e.maxAgeSeconds,this._cacheExpirations=new Map,e.purgeOnQuotaError&&(t=()=>this.deleteCacheAndMetadata(),s.add(t))}_getCacheExpiration(e){if(e===r())throw new t("expire-custom-caches-only");let s=this._cacheExpirations.get(e);return s||(s=new B(e,this._config),this._cacheExpirations.set(e,s)),s}_isResponseDateFresh(e){if(!this._maxAgeSeconds)return!0;const t=this._getDateHeaderTimestamp(e);return null===t||t>=Date.now()-1e3*this._maxAgeSeconds}_getDateHeaderTimestamp(e){if(!e.headers.has("date"))return null;const t=e.headers.get("date"),s=new Date(t).getTime();return isNaN(s)?null:s}async deleteCacheAndMetadata(){for(const[e,t]of this._cacheExpirations)await self.caches.delete(e),await t.delete();this._cacheExpirations=new Map}}var Q;self.addEventListener("install",()=>self.skipWaiting()),self.addEventListener("activate",()=>self.clients.claim()),function(e){U().addToCacheList(e),e.length>0&&(self.addEventListener("install",L),self.addEventListener("activate",O))}([{"revision":"c5cd7f5300576ab4c88202b42f6ded62","url":"static/ajax-loader.gif"},{"revision":"d672c5cf33f721892224930ac231968c","url":"static/custom.css"},{"revision":"8fc5b53ba0ebdcd35da7d454247d41e7","url":"static/dialog-es5.js"},{"revision":"67e7002a7d6b4dcd47ffe6ef4873680c","url":"static/dialog.js"},{"revision":"f161900ce881a9c697d6b28d25191b81","url":"static/favicon.ico"},{"revision":"6a406c5c371dfa5211eaf5f9bac08262","url":"static/functions-es5.js"},{"revision":"1a77955e00382589b2191c5c073c07e7","url":"static/functions.js"},{"revision":"73fcadd427b277a4f76e334acf44129c","url":"static/gmap_functions-es5.js"},{"revision":"dfc7f84f1712601a8d0d8946427e53ee","url":"static/gmap_functions.js"},{"revision":"d34322574af5adb414c7bfe2aca511ec","url":"static/google-locate-control.js"},{"revision":"7f7b8fe80771c88053eadf97a9835ca4","url":"static/manifest.json"},{"revision":"569b40cdf08f6cb8469f19c881006cd1","url":"static/markerclusterer-es5.js"},{"revision":"826eade5f67407a5b63dc6a750d58b3c","url":"static/markerclusterer.js"},{"revision":"c7918b16167fb65fab834e1d8d037f1c","url":"static/slick-theme.css"},{"revision":"f38b2db10e01b1572732a3191d538707","url":"static/slick.css"},{"revision":"49035c157177391800931fff2478f40c","url":"static/style.css"},{"revision":"fe0f18cd4d5f1d03dd247211c5667669","url":"static/sweetalert.min.js"},{"revision":"b51099b722720d4b345c7f8f376c1c1e","url":"static/tsconfig.json"},{"revision":"9cdc8d698e728c0dc6c4aa4d89622931","url":"static/yii.activeForm.js"},{"revision":"43abc1f0d941b2dbed47eedd48ca64fe","url":"static/yii.js"},{"revision":"295e9ab2f973472412000b38793b7be6","url":"img/32x32.png"},{"revision":"1eaf1a0f1eb8555244755558c29bea2c","url":"img/70x70.png"},{"revision":"11ef0396dad0c1244b64290076f7d1c5","url":"img/A.png"},{"revision":"bb81e610f6a02e95c437ee013e8dc477","url":"img/Ares_Logo-3.png"},{"revision":"71dea0bfb25e010cd198b0eb6b3d734d","url":"img/B.png"},{"revision":"8def542df5cacf0a41de8cdd9aa2d9c1","url":"img/basiliscoe.png"},{"revision":"2875a3a63de21f28e77b760d6b7f374e","url":"img/C.png"},{"revision":"310ab02ce89b1aa59e9ccaca7ecda1a9","url":"img/cannon_bronze.png"},{"revision":"8803ed95ca023c6572fbbccc97a27870","url":"img/cannon_chart.svg"},{"revision":"a9666b7d89c2115d18fa6b84e70eca2f","url":"img/cannon_gold_192.png"},{"revision":"beb52d01ab491b0dda98d57cd32cbf30","url":"img/cannon_gold.png"},{"revision":"475e6c4aa6013e7501d0575c96abc736","url":"img/cannon_measuring.jpg"},{"revision":"f070c22fcb86f3ffc136885ed19fc9b2","url":"img/cannon_silver.png"},{"revision":"402501f2befdf63f4e0ff7468e287543","url":"img/cannon.svg"},{"revision":"4c1f096780e88dae602d9b5b66778bc2","url":"img/cismas.png"},{"revision":"0276ffb3d76d63ec13fd8e3e6e4a0bfa","url":"img/Cyl.png"},{"revision":"001deb093c7450efe7772feb8aced530","url":"img/E.png"},{"revision":"1bd3e3d5e0f65f307683323c2fd670ae","url":"img/Ext.png"},{"revision":"9c6edc49620608270898b24afb98c465","url":"img/F.png"},{"revision":"9eea5ca26d649a1fe099cfbbbaa2507e","url":"img/facebook.png"},{"revision":"27c252bb611079a13089f01f34dad260","url":"img/Fil.png"},{"revision":"2fa2a12aa43feffb4820b7558e90d8ab","url":"img/Flat.png"},{"revision":"af02106ed9006b905cd72fc2974afaeb","url":"img/G.png"},{"revision":"f6f19de3c47e29d02048edef4324831c","url":"img/gun-map-192.png"},{"revision":"f4ac79bdaa1f5a66093cc504347961bf","url":"img/gun-map-512.png"},{"revision":"5c3b51871d89bac47991b833233094ff","url":"img/gun-map-768.jpg"},{"revision":"cff64ef97fbf4057c3cea5d541f2fc6d","url":"img/H.png"},{"revision":"56c9fd363b5f66ee9e4ade84c7fb3bb8","url":"img/K.png"},{"revision":"f9e634e323b3f4637ddedd4e935c98a1","url":"img/L.png"},{"revision":"fe953f48d20a57a5155040dd7c8c41bc","url":"img/m1.png"},{"revision":"558853d99c4fe2738843b60824a9eda9","url":"img/m2.png"},{"revision":"4c6afbabe37e08ce966a66dc5031375c","url":"img/m3.png"},{"revision":"6dc122ac7ac14cd1652f97ebfee3e85a","url":"img/mouldings.png"},{"revision":"bed82a1ee8e063698eda3d6a76ed5f95","url":"img/MSDS-768.png"},{"revision":"dd4288bf8e6781320b16f62ca3fecad1","url":"img/N.png"},{"revision":"a8068108ce9aebd1a1bee1277a414074","url":"img/O.png"},{"revision":"8d332093838079515e1ee582a83da51c","url":"img/P.png"},{"revision":"e1b608fe02b8003d3881407a0417aebe","url":"img/Q.png"},{"revision":"7529d67e174080750b41be7a897f9cc1","url":"img/R.png"},{"revision":"36949ad758a9ea7d6f2c688fa00d89d8","url":"img/runette_long.png"},{"revision":"f8a4b7c57e20b31a83fbfa94486bde5c","url":"img/S.png"},{"revision":"31e204f3f44ef594a79d4a2178e83a9b","url":"img/Sph.png"},{"revision":"53249b9c0ff50f54e67ddfad658ccc04","url":"img/T.png"},{"revision":"992671dae0a6781b49417fb7a6416c2c","url":"img/U.png"},{"revision":"05aeaa1767e89ed016ffa798bcc632fb","url":"img/ultima-ratio-logo.jpg"},{"revision":"19c82669ed749fd696227835f6fbe368","url":"img/V.png"}]),E(Q),P(/^https:\/\/fonts\.googleapis\.com/,new I({cacheName:"google-fonts-stylesheets"})),P(/^https:\/\/fonts\.gstatic\.com/,new W({cacheName:"google-fonts-webfonts",plugins:[new class{constructor(e){this.cacheWillUpdate=async({response:e})=>this._cacheableResponse.isResponseCacheable(e)?e:null,this._cacheableResponse=new F(e)}}({statuses:[0,200]}),new $({maxAgeSeconds:31536e3,maxEntries:31})]})),P("/database",new class{constructor(e={}){if(this._cacheName=r(e.cacheName),e.plugins){const t=e.plugins.some(e=>!!e.cacheWillUpdate);this._plugins=t?e.plugins:[D,...e.plugins]}else this._plugins=[D];this._networkTimeoutSeconds=e.networkTimeoutSeconds||0,this._fetchOptions=e.fetchOptions,this._matchOptions=e.matchOptions}async handle({event:e,request:s}){const n=[];"string"==typeof s&&(s=new Request(s));const a=[];let i;if(this._networkTimeoutSeconds){const{id:t,promise:r}=this._getTimeoutPromise({request:s,event:e,logs:n});i=t,a.push(r)}const r=this._getNetworkPromise({timeoutId:i,request:s,event:e,logs:n});a.push(r);let c=await Promise.race(a);if(c||(c=await r),!c)throw new t("no-response",{url:s.url});return c}_getTimeoutPromise({request:e,logs:t,event:s}){let n;return{promise:new Promise(t=>{n=setTimeout(async()=>{t(await this._respondFromCache({request:e,event:s}))},1e3*this._networkTimeoutSeconds)}),id:n}}async _getNetworkPromise({timeoutId:e,request:t,logs:s,event:n}){let a,i;try{i=await w({request:t,event:n,fetchOptions:this._fetchOptions,plugins:this._plugins})}catch(e){a=e}if(e&&clearTimeout(e),a||!i)i=await this._respondFromCache({request:t,event:n});else{const e=i.clone(),s=u({cacheName:this._cacheName,request:t,response:e,event:n,plugins:this._plugins});if(n)try{n.waitUntil(s)}catch(e){}}return i}_respondFromCache({event:e,request:t}){return d({cacheName:this._cacheName,request:t,event:e,matchOptions:this._matchOptions,plugins:this._plugins})}}({cacheName:"static-resources"})),P("/",new I({cacheName:"static-resources"})),P(/http.*\.(?:js|css|mjs)$/,new W({cacheName:"libraries",plugins:[new $({maxAgeSeconds:2592e3})]})),P(/\.(?:png|gif|jpg|jpeg|svg)$/,new W({cacheName:"images",plugins:[new $({maxEntries:60,maxAgeSeconds:2592e3})]}));
